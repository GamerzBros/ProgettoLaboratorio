Index: src/centrivaccinali/CentriVaccinali.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package centrivaccinali;\r\n\r\nimport cittadini.Cittadini;\r\nimport cittadini.SingoloCittadino;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport javafx.application.Application;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.MessageDigest;\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.Scanner;\r\n\r\n//TODO METTERE NOME COGNOME MATRICOLA SEDE\r\npublic class CentriVaccinali extends Application {\r\n    public static final String PATH_TO_CENTRIVACCINALI=\"data/CentriVaccinali.dati.txt\";\r\n    public static final String PATH_TO_CITTADINI_REGISTRATI_DATI=\"data/Cittadini_Registrati.dati.txt\";\r\n    public static final String PATH_TO_DATA=\"data/\";\r\n    public static final String PREFIX = \"Vaccinati_\";\r\n    public static final String SUFFIX = \".dati.txt\";\r\n    private ObservableList<String> vaccino_somministrato_items = FXCollections.observableArrayList(\"Pfizer\",\"AstraZeneca\",\"Moderna\",\"J&J\");\r\n    private ObservableList<String> centro_vaccinale_items = FXCollections.observableArrayList();\r\n    private ObservableList<String> qualificatore_items = FXCollections.observableArrayList(\"via\",\"v.le\",\"pzza\");\r\n    public static final String PATH_TO_CENTRIVACCINALI_DATI = \"data/CentriVaccinali.dati.txt\";\r\n    private Scene scene;\r\n    Cittadini cittadini;\r\n    @FXML\r\n    private TextField user_txtfield;\r\n    @FXML\r\n    private PasswordField user_password;\r\n    @FXML\r\n    private Button btn_cittadini;\r\n    @FXML\r\n    private Button btn_centriVaccinali;\r\n    @FXML\r\n    private javafx.scene.control.TextField nome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cognome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cf_paziente;\r\n    @FXML\r\n    private TextField ID_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> vaccino_somministrato;\r\n    @FXML\r\n    private DatePicker data_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> centro_vaccinale;\r\n    @FXML\r\n    private TextField nome_centro;\r\n    @FXML\r\n    private TextField nome_via;\r\n    @FXML\r\n    private TextField numero_civico;\r\n    @FXML\r\n    private TextField comune;\r\n    @FXML\r\n    private TextField provincia;\r\n    @FXML\r\n    private TextField cap;\r\n    @FXML\r\n    private ChoiceBox<String> qualificatore;\r\n    @FXML\r\n    private Button annulla;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        FXMLLoader loader = new FXMLLoader();\r\n        URL xmlUrl = getClass().getResource(\"SelectionUI.fxml\");\r\n        loader.setLocation(xmlUrl);\r\n\r\n        Parent root = loader.load();\r\n\r\n        Scene scene=new Scene(root);\r\n\r\n\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Pagina iniziale\");\r\n\r\n        InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n        Image image = new Image(icon);\r\n\r\n        stage.getIcons().add(image);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    public void registraCentroVaccinale(){\r\n        String nome = nome_centro.getText();\r\n        String qualif = qualificatore.getValue();\r\n        String via = nome_via.getText();\r\n        String civico = numero_civico.getText();\r\n        String com = comune.getText();\r\n        String prov = provincia.getText();\r\n        String Cap = cap.getText();\r\n        if(nome.equals(\"\") || qualif==null || via.equals(\"\")|| civico.equals(\"\")|| com.equals(\"\")|| prov.equals(\"\")|| Cap.equals(\"\")){\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"Errore\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Controllare i dati inseriti\");\r\n            alert.showAndWait();\r\n        }else{\r\n            try{\r\n                File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n                BufferedWriter out = new BufferedWriter(new FileWriter(file,true));\r\n                String output = nome+\";\"+qualif+\";\"+via+\";\"+civico+\";\"+com+\";\"+prov+\";\"+Cap;\r\n                out.write(output);\r\n                out.newLine();\r\n                out.flush();\r\n                out.close();\r\n                Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n                alert.setTitle(\"Successo\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Centro vaccinale registrato\");\r\n                alert.showAndWait();\r\n            }catch (IOException e){\r\n                e.toString();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void stop() throws Exception {\r\n        super.stop();\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String nomeCentroVaccinale)throws FileNotFoundException{ //Ricerca centro per nome, ogni centro che contiene quella \"parte\" di nome, viene visualizzato\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI);\r\n            Scanner reader = new Scanner(file);\r\n            String[] parts;\r\n            while(reader.hasNext()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                if(parts[0].contains(nomeCentroVaccinale)){\r\n                    System.out.println(\"Centri trovati:\"+parts[0]);\r\n                }else{\r\n                    System.out.println(\"Il centro potrebbe non esistere\");\r\n                }\r\n            }\r\n            reader.close();\r\n\r\n        /*parts = line.split(\";\");\r\n        if(parts[0].contains(nomeCentroVaccinale)){\r\n            System.out.println(\"Centro trovato\");\r\n        }else{\r\n            System.out.println(\"Il centro potrebbe non esistere\");\r\n        }\r\n        reader.close();\r\n\r\n         */\r\n        }catch (FileNotFoundException fe) {\r\n            fe.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String comune, String tipologia) throws FileNotFoundException{  //TODO rivedere i tipi dei parametri e try catch\r\n\r\n    }\r\n\r\n    public void visualizzaInfoCentroVaccinale(SingoloCentroVaccinale centroVaccinale){\r\n        System.out.println(centroVaccinale.toString());\r\n\r\n    }\r\n\r\n    public void inserisciEventiAvversi(Object eventoAvverso){  //TODO modificare i parametri\r\n\r\n    }\r\n\r\n    public void onCentriVaccinaliSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"opzioniLoggato.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"opzioniLoggato\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public void onNuovoCentroSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoCentroVaccinale.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo centro vaccinale\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void registraVaccinato(){\r\n        //TODO chiamare questo metodo dopo registrazione (pole deve fare la sua parte)\r\n        String nome = nome_paziente.getText();\r\n        String cognome = cognome_paziente.getText();\r\n        String codice_fiscale =cf_paziente.getText();\r\n        String tipoVaccino = vaccino_somministrato.getValue();\r\n        String centroVaccinale = centro_vaccinale.getValue();\r\n        String id_vaccino = ID_vaccinazione.getText();\r\n        LocalDate dataVaccino = data_vaccinazione.getValue();\r\n        String dataVaccinazione = dataVaccino.format(DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\"));\r\n\r\n\r\n        SingoloCittadino cittadino = new SingoloCittadino(nome,cognome,codice_fiscale);\r\n        cittadino.setCentroVaccinale(centroVaccinale);\r\n        cittadino.setIdVaccino(Integer.parseInt(id_vaccino));\r\n\r\n        int idVaccino = cittadino.getIdVaccino();\r\n\r\n        String output = nome+\";\"+cognome+\";\"+codice_fiscale+\";\"+tipoVaccino+\";\"+idVaccino+\";\"+dataVaccinazione;\r\n        String file_ID = \"data/\"+\"Vaccinati_\"+centroVaccinale+\".dati.txt\";\r\n        try{\r\n            FileWriter writer = new FileWriter(file_ID,true);\r\n            BufferedWriter out = new BufferedWriter(writer);\r\n            out.write(output);\r\n            out.flush();\r\n            out.newLine();\r\n            out.close();\r\n            writer.close();\r\n            Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n            alert.setTitle(\"Successo\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Paziente registrato a sistema\");\r\n            alert.showAndWait();\r\n        }catch (IOException e){\r\n            e.toString();\r\n        }\r\n    }\r\n\r\n\r\n    public void onCittadiniSelected(){\r\n        cittadini=new Cittadini();\r\n        try {\r\n            cittadini.loadMainCittadiniUI();\r\n            Stage stage=(Stage)btn_cittadini.getScene().getWindow();\r\n            stage.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public void onRegisterClicked() throws Exception{ //TODO FAR ANDARE A CAPO QUANDO SCRIVE\r\n        String pwd = user_password.getText();\r\n        String user = user_txtfield.getText();\r\n\r\n        /*Hashing della password per renderla one-way\r\n        MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controllare che questo controllore sia giusto. sul web dicono che non funzioni correttamente\r\n\r\n        try{\r\n            MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n            byte[] hash = messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8));\r\n            pwd = toHexString(hash);\r\n            System.out.println(pwd);\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        FileWriter writer = new FileWriter(PATH_TO_CITTADINI_REGISTRATI_DATI,true);\r\n        BufferedWriter out = new BufferedWriter(writer);\r\n        String scrivi = user+\";\"+pwd;\r\n        out.write(scrivi);\r\n        out.newLine();\r\n        out.close();\r\n    }\r\n\r\n    private String toHexString(byte[] array) {\r\n        StringBuilder sb = new StringBuilder(array.length * 2);\r\n\r\n        for (byte b : array){\r\n            int value = 0xFF & b;\r\n            String toAppend = Integer.toHexString(value);\r\n\r\n            sb.append(toAppend);\r\n        }\r\n        sb.setLength(sb.length()-1);\r\n        return sb.toString();\r\n    }\r\n\r\n    public void onLoginClicked() {\r\n        String user = user_txtfield.getText();\r\n        String pwd = user_password.getText();\r\n        String user_temp; //questi temp sono i \"candidati\" user e psw presi dal reader dal file\r\n        String pwd_temp;\r\n        String[] parts;//contenitore per il metodo split\r\n\r\n        try {\r\n            if (!user.equals(\"\") && !pwd.equals(\"\")) {\r\n                File file = new File(PATH_TO_CITTADINI_REGISTRATI_DATI);\r\n                Scanner reader = new Scanner(file);\r\n                while (reader.hasNextLine()) {\r\n                    String line = reader.nextLine();\r\n                    parts = line.split(\";\");\r\n                    user_temp = parts[0];\r\n                    pwd_temp = parts[1];\r\n\r\n                    MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n                    pwd_temp = new String(messageDigest.digest(pwd_temp.getBytes(StandardCharsets.UTF_8))); //TODO Rivedere controllore\r\n\r\n                    if (user_temp.equals(user) && pwd_temp.equals(pwd)) {\r\n                        System.out.println(\"LOGGATO\");  //in qualche modo qui caricherà la nuova interface, vai pole divertiti\r\n                    } else {\r\n                        System.out.println(\"User inesistente, premere sul tasto 'register'\");//popup magari (?)\r\n                        /*\r\n                        JOptionPane.showMessageDialog(null,\r\n                            \"User inesistente, premere sul tasto 'register'\",\r\n                            JOptionPane.ERROR_MESSAGE);                           popup?\r\n                        */\r\n                    }\r\n                }\r\n            } else {\r\n                System.out.println(\"Inserire dei dati\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void onNewVaccinate(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoPaziente.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo Paziente\");\r\n\r\n\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n            stage.getIcons().add(image);\r\n            stage.show();\r\n\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void vaccino_somministrato_setter(){\r\n        vaccino_somministrato.setItems(vaccino_somministrato_items);\r\n    }\r\n\r\n    public void qualificatore_setter(){\r\n        qualificatore.setItems(qualificatore_items);\r\n    }\r\n\r\n    public void centro_vaccinale_setter(){\r\n        String[] parts;\r\n        String nome_centro_vaccinale=\"\";\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n            Scanner reader = new Scanner(file);\r\n            while (reader.hasNextLine()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                nome_centro_vaccinale = parts[0];\r\n                if(!centro_vaccinale_items.contains(nome_centro_vaccinale))\r\n                    centro_vaccinale_items.add(nome_centro_vaccinale);\r\n            }\r\n            centro_vaccinale.setItems(centro_vaccinale_items);\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void annulla_button(){\r\n        Stage stage = (Stage)annulla.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n\r\n\r\n    public void onNewVaccinateClicked(){\r\n        onNewVaccinate();\r\n    }\r\n\r\n\r\n\r\n    public static void main(String[] args) throws Exception {\r\n         Application.launch();\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/centrivaccinali/CentriVaccinali.java b/src/centrivaccinali/CentriVaccinali.java
--- a/src/centrivaccinali/CentriVaccinali.java	(revision 0fbdb4e7ef30bc14120f63b04e961371a044c279)
+++ b/src/centrivaccinali/CentriVaccinali.java	(date 1629125751047)
@@ -132,6 +132,72 @@
         }
     }
 
+    public void onNuovoCentroSelected(){
+        try {
+            FXMLLoader loader = new FXMLLoader();
+            URL xmlUrl = getClass().getResource("nuovoCentroVaccinale.fxml");
+            loader.setLocation(xmlUrl);
+
+            Parent root = loader.load();
+
+            scene = new Scene(root);
+
+            Stage stage = new Stage();
+            stage.setScene(scene);
+            stage.setTitle("Nuovo centro vaccinale");
+
+            InputStream icon = getClass().getResourceAsStream("fiorellino.png");
+            Image image = new Image(icon);
+
+            stage.getIcons().add(image);
+
+            stage.show();
+        }
+        catch (IOException e){
+            e.printStackTrace();
+        }
+
+    }
+
+    public void registraVaccinato(){
+        //TODO chiamare questo metodo dopo registrazione (pole deve fare la sua parte)
+        String nome = nome_paziente.getText();
+        String cognome = cognome_paziente.getText();
+        String codice_fiscale =cf_paziente.getText();
+        String tipoVaccino = vaccino_somministrato.getValue();
+        String centroVaccinale = centro_vaccinale.getValue();
+        String id_vaccino = ID_vaccinazione.getText();
+        LocalDate dataVaccino = data_vaccinazione.getValue();
+        String dataVaccinazione = dataVaccino.format(DateTimeFormatter.ofPattern("MMM-dd-yyyy"));
+
+
+        SingoloCittadino cittadino = new SingoloCittadino(nome,cognome,codice_fiscale);
+        cittadino.setCentroVaccinale(centroVaccinale);
+        cittadino.setIdVaccino(Integer.parseInt(id_vaccino));
+
+        int idVaccino = cittadino.getIdVaccino();
+
+        String output = nome+";"+cognome+";"+codice_fiscale+";"+tipoVaccino+";"+idVaccino+";"+dataVaccinazione;
+        String file_ID = "data/"+"Vaccinati_"+centroVaccinale+".dati.txt";
+        try{
+            FileWriter writer = new FileWriter(file_ID,true);
+            BufferedWriter out = new BufferedWriter(writer);
+            out.write(output);
+            out.flush();
+            out.newLine();
+            out.close();
+            writer.close();
+            Alert alert = new Alert(Alert.AlertType.INFORMATION);
+            alert.setTitle("Successo");
+            alert.setHeaderText(null);
+            alert.setContentText("Paziente registrato a sistema");
+            alert.showAndWait();
+        }catch (IOException e){
+            e.toString();
+        }
+    }
+
+
     @Override
     public void stop() throws Exception {
         super.stop();
