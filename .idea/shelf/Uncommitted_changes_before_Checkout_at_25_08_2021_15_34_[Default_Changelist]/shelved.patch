Index: src/cittadini/Cittadini.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cittadini;\r\n\r\nimport centrivaccinali.CentriVaccinali;\r\nimport centrivaccinali.SingoloCentroVaccinale;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.MessageDigest;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\nimport java.util.StringTokenizer;\r\nimport java.util.Vector;\r\n\r\n//TODO METTERE NOME COGNOME MATRICOLA SEDE\r\npublic class Cittadini implements EventHandler<ActionEvent> {\r\n    private SingoloCittadino cittadinoLoggato;\r\n    @FXML\r\n    private ScrollPane scrollPane_CentriVaccinali;\r\n    @FXML\r\n    private TextField user_txtfield;\r\n    @FXML\r\n    private PasswordField pass_userPswd;\r\n    @FXML\r\n    private TextField txt_user;\r\n    @FXML\r\n    private PasswordField pass_user;\r\n    @FXML\r\n    private TextField txt_search;\r\n    @FXML\r\n    private Button btn_search;\r\n    private Vector<SingoloCentroVaccinale> centriVaccinaliList = new Vector<>();\r\n    public static final String PATH_TO_CITTADINI_REGISTRATI_DATI = \"data/Cittadini_Registrati.dati.txt\";\r\n    private boolean isLogged = false;\r\n\r\n\r\n    public void loadUI() throws Exception {\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        URL url = getClass().getResource(\"mainCittadini.fxml\");\r\n        fxmlLoader.setLocation(url);\r\n        Parent root = fxmlLoader.load();\r\n\r\n        Scene scene = new Scene(root);\r\n\r\n        Stage stage = new Stage();\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Portale Cittadini\");\r\n\r\n        scrollPane_CentriVaccinali = (ScrollPane) scene.lookup(\"#scrollPane_CentriVaccinali\");\r\n\r\n        /*if(btn_search.isPressed()){\r\n            centriVaccinaliList = findCenter();\r\n        }else{*/\r\n        centriVaccinaliList = Cittadini.getCentriVaccinaliFromFile();\r\n        //}\r\n\r\n        creaVbox(centriVaccinaliList);\r\n\r\n        stage.show();\r\n    }\r\n\r\n    private void creaVbox(List<SingoloCentroVaccinale> centriVaccinaliMostrati) {\r\n        VBox scrollPaneContent = new VBox();\r\n        scrollPaneContent.setMinWidth(scrollPane_CentriVaccinali.getPrefWidth() - 2);\r\n\r\n        scrollPane_CentriVaccinali.setContent(scrollPaneContent);\r\n\r\n        //scrollPaneContent.getChildren().add();\r\n\r\n        for (int i = 0; i < centriVaccinaliMostrati.size(); i++) {\r\n            Pane panel = new Pane();\r\n            panel.setMinHeight(30);\r\n            SingoloCentroVaccinale currentCentro = centriVaccinaliMostrati.get(i);\r\n\r\n            panel.setStyle(\"-fx-background-color: #FFFFFF\");\r\n            Label lblName = new Label(currentCentro.getNome());\r\n            Label lblAddress = new Label(currentCentro.getIndirizzo());\r\n            Label lblType = new Label(currentCentro.getTipologia());\r\n            Button btnGoTo = new Button(\">\");\r\n\r\n            lblName.setLayoutX(6);\r\n            lblName.setMinHeight(30);\r\n            lblName.setFont(new Font(\"Arial\", 19));\r\n\r\n            lblAddress.setLayoutX(175);\r\n            lblAddress.setMinHeight(30);\r\n            lblAddress.setFont(new Font(\"Arial\", 19));\r\n\r\n            lblType.setLayoutX(420);\r\n            lblType.setMinHeight(30);\r\n            lblType.setFont(new Font(\"Arial\", 19));\r\n\r\n            btnGoTo.setLayoutX(520);\r\n            btnGoTo.setFont(new Font(\"Arial\", 19));\r\n            btnGoTo.setStyle(\"-fx-background-radius: 5em;\" + \"-fx-min-width: 1px;\" + \"-fx-background-color: #FFFFFF;\" + \"-fx-border-radius: 5em;\" + \"-fx-border-color: #000000;\");\r\n            btnGoTo.setId(String.valueOf(i));\r\n            btnGoTo.setOnAction(this);\r\n\r\n\r\n            panel.getChildren().add(lblName);\r\n            panel.getChildren().add(lblAddress);\r\n            panel.getChildren().add(lblType);\r\n            panel.getChildren().add(btnGoTo);\r\n\r\n\r\n            scrollPaneContent.getChildren().add(panel);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void handle(ActionEvent actionEvent) {\r\n        Button source = (Button) actionEvent.getSource();\r\n        int buttonID = Integer.parseInt(source.getId());\r\n        //TODO David: far partire il metodo che carica la ui del centro vaccinale (in base all'id)\r\n    }\r\n\r\n    /*public static void registerEventiAvversi()throws Exception {\r\n        String evento1 = box1.getSelectedItem().toString(); //evento1 = Mal di testa\r\n        String evento2 = box2.getSelectedItem().toString(); //evento2 = Febbre\r\n        String evento3 = box3.getSelectedItem().toString(); //evento3 = Dolori muscolari o articolari\r\n        String evento4 = box4.getSelectedItem().toString(); //evento4 = Linfoadenopatia\r\n        String evento5 = box5.getSelectedItem().toString(); //evento5 = Tachicardia\r\n        String evento6 = box6.getSelectedItem().toString(); //evento6 = Crisi ipertensiva\r\n        FileWriter writer = new FileWriter(\"account.txt\", true);\r\n        BufferedWriter out = new BufferedWriter(writer);\r\n        String fileInput =  \"Mal di Testa:\" + evento1 + \";\" + \"Febbre:\" + evento2 + \";\" + \"Dolori muscolari o articolari:\" + evento3 + \";\" + \"Linfoadenopatia:\" + evento4 + \";\" + \"Tachicardia:\" + evento5 + \";\" + \"Crisi ipertensiva:\" + evento6 + \";\";\r\n        out.write(fileInput);\r\n        out.newLine();\r\n        out.flush();\r\n        out.close();\r\n    }*/\r\n\r\n    public static Vector<SingoloCentroVaccinale> getCentriVaccinaliFromFile() {\r\n        Vector<SingoloCentroVaccinale> vector = new Vector<>();\r\n\r\n        try {\r\n            FileReader fileReader = new FileReader(CentriVaccinali.PATH_TO_CENTRIVACCINALI);\r\n            BufferedReader bufferedReader = new BufferedReader(fileReader);\r\n\r\n            String line = null;\r\n\r\n            while ((line = bufferedReader.readLine()) != null) {\r\n                StringTokenizer st = new StringTokenizer(line, \";\");\r\n                if (st.countTokens() == 3) {\r\n                    String nome = st.nextToken();\r\n                    String indirizzo = st.nextToken();\r\n                    String tipologia = st.nextToken();\r\n\r\n                    vector.add(new SingoloCentroVaccinale(nome, indirizzo, tipologia));\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return vector;\r\n\r\n    }\r\n\r\n\r\n    //TODO Marsio:creare registrazione e login cittadino\r\n    public void registraCittadino() throws Exception {\r\n        String pwd = pass_user.getText();\r\n        String user = txt_user.getText();\r\n\r\n        /*Hashing della password per renderla one-way\r\n        MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controlalre che questo controllore sia giusto. sul web dicono che non funzioni correttamente\r\n\r\n        try {\r\n            MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n            byte[] hash = messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8));\r\n            pwd = toHexString(hash);\r\n            System.out.println(pwd);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        FileWriter writer = new FileWriter(PATH_TO_CITTADINI_REGISTRATI_DATI, true);\r\n        BufferedWriter out = new BufferedWriter(writer);\r\n        String scrivi = user + \";\" + pwd;\r\n        out.write(scrivi);\r\n        out.newLine();\r\n        out.close();\r\n    }\r\n\r\n    public void loggaCittadini() {\r\n        String user = user_txtfield.getText();\r\n        String pwd = pass_userPswd.getText();\r\n        String user_temp;\r\n        String pwd_temp;\r\n        String[] parts;\r\n\r\n        try {\r\n            if (!user.equals(\"\") && !pwd.equals(\"\")) {\r\n                File file = new File(PATH_TO_CITTADINI_REGISTRATI_DATI);\r\n                Scanner reader = new Scanner(file);\r\n                while (reader.hasNextLine()) {\r\n                    String line = reader.nextLine();\r\n                    parts = line.split(\";\");\r\n                    user_temp = parts[0];\r\n                    pwd_temp = parts[1];\r\n\r\n                    MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n                    pwd_temp = new String(messageDigest.digest(pwd_temp.getBytes(StandardCharsets.UTF_8)));\r\n\r\n                    if (user_temp.equals(user) && pwd_temp.equals(pwd)) {\r\n                        System.out.println(\"LOGGATO\");\r\n                        isLogged = true;\r\n                    } else {\r\n                        System.out.println(\"User inesistente, premere sul tasto 'register'\");\r\n                    }\r\n                }\r\n            } else {\r\n                System.out.println(\"Inserire dei dati\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private String toHexString(byte[] array) {\r\n        StringBuilder sb = new StringBuilder(array.length * 2);\r\n\r\n        for (byte b : array) {\r\n            int value = 0xFF & b;\r\n            String toAppend = Integer.toHexString(value);\r\n\r\n            sb.append(toAppend);\r\n        }\r\n        sb.setLength(sb.length() - 1);\r\n        return sb.toString();\r\n    }\r\n\r\n    //TODO: Marsio: implementare ricerca centro vaccinale\r\n\r\n\r\n    public Vector<SingoloCentroVaccinale> findCenter() {\r\n\r\n        Vector<SingoloCentroVaccinale> vector_search = new Vector<>();\r\n        String search = txt_search.getText();\r\n        try {\r\n            FileReader fileReader = new FileReader(CentriVaccinali.PATH_TO_CENTRIVACCINALI);\r\n            BufferedReader bufferedReader = new BufferedReader(fileReader);\r\n\r\n            String line = null;\r\n\r\n            while ((line = bufferedReader.readLine()) != null) {\r\n                StringTokenizer st = new StringTokenizer(line, \";\");\r\n                if (st.countTokens() == 3) {\r\n                    String nome = st.nextToken();\r\n                    String indirizzo = st.nextToken();\r\n                    String tipologia = st.nextToken();\r\n\r\n                    if (nome.contains(search) || indirizzo.contains(search) || tipologia.contains(search))\r\n                        vector_search.add(new SingoloCentroVaccinale(nome, indirizzo, tipologia));\r\n                        System.out.println(vector_search);\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return vector_search;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/cittadini/Cittadini.java b/src/cittadini/Cittadini.java
--- a/src/cittadini/Cittadini.java	
+++ b/src/cittadini/Cittadini.java	
@@ -25,9 +25,14 @@
 
 //TODO METTERE NOME COGNOME MATRICOLA SEDE
 public class Cittadini implements EventHandler<ActionEvent> {
-    private SingoloCittadino cittadinoLoggato;
+    public static final String PATH_TO_CENTRIVACCINALI_DATI = "data/CentriVaccinali.dati.txt";
+    public static final String PATH_TO_EVENTI_AVVERSI="account.txt"; //TODO Sistemare il path qui
+    private boolean isLogged=false;
+    private int currentCentreID;
+    private Vector<SingoloCentroVaccinale> centriVaccinaliList=new Vector<>();
     @FXML
     private ScrollPane scrollPane_CentriVaccinali;
+<<<<<<< HEAD
     @FXML
     private TextField user_txtfield;
     @FXML
@@ -48,6 +53,13 @@
     public void loadUI() throws Exception {
         FXMLLoader fxmlLoader = new FXMLLoader();
         URL url = getClass().getResource("mainCittadini.fxml");
+=======
+
+
+    public void loadMainCittadiniUI() throws Exception {
+        FXMLLoader fxmlLoader=new FXMLLoader();
+        URL url=getClass().getResource("mainCittadini.fxml");
+>>>>>>> dd1a73e4612873d9f3587d004c4010c5d44ed14b
         fxmlLoader.setLocation(url);
         Parent root = fxmlLoader.load();
 
@@ -76,10 +88,15 @@
 
         scrollPane_CentriVaccinali.setContent(scrollPaneContent);
 
+<<<<<<< HEAD
         //scrollPaneContent.getChildren().add();
 
         for (int i = 0; i < centriVaccinaliMostrati.size(); i++) {
             Pane panel = new Pane();
+=======
+        for (int i=0;i<centriVaccinaliMostrati.size();i++){
+            Pane panel=new Pane();
+>>>>>>> dd1a73e4612873d9f3587d004c4010c5d44ed14b
             panel.setMinHeight(30);
             SingoloCentroVaccinale currentCentro = centriVaccinaliMostrati.get(i);
 
@@ -121,25 +138,15 @@
     @Override
     public void handle(ActionEvent actionEvent) {
         Button source = (Button) actionEvent.getSource();
-        int buttonID = Integer.parseInt(source.getId());
-        //TODO David: far partire il metodo che carica la ui del centro vaccinale (in base all'id)
-    }
+        currentCentreID = Integer.parseInt(source.getId());
 
-    /*public static void registerEventiAvversi()throws Exception {
-        String evento1 = box1.getSelectedItem().toString(); //evento1 = Mal di testa
-        String evento2 = box2.getSelectedItem().toString(); //evento2 = Febbre
-        String evento3 = box3.getSelectedItem().toString(); //evento3 = Dolori muscolari o articolari
-        String evento4 = box4.getSelectedItem().toString(); //evento4 = Linfoadenopatia
-        String evento5 = box5.getSelectedItem().toString(); //evento5 = Tachicardia
-        String evento6 = box6.getSelectedItem().toString(); //evento6 = Crisi ipertensiva
-        FileWriter writer = new FileWriter("account.txt", true);
-        BufferedWriter out = new BufferedWriter(writer);
-        String fileInput =  "Mal di Testa:" + evento1 + ";" + "Febbre:" + evento2 + ";" + "Dolori muscolari o articolari:" + evento3 + ";" + "Linfoadenopatia:" + evento4 + ";" + "Tachicardia:" + evento5 + ";" + "Crisi ipertensiva:" + evento6 + ";";
-        out.write(fileInput);
-        out.newLine();
-        out.flush();
-        out.close();
-    }*/
+        try {
+            loadVisualizzatoreCentroVaccinale(currentCentreID);
+        }
+        catch (IOException e){
+            e.printStackTrace();
+        }
+    }
 
     public static Vector<SingoloCentroVaccinale> getCentriVaccinaliFromFile() {
         Vector<SingoloCentroVaccinale> vector = new Vector<>();
@@ -168,6 +175,202 @@
 
     }
 
+    public void loadVisualizzatoreCentroVaccinale(int idCentro) throws IOException {
+        FXMLLoader loader=new FXMLLoader();
+        URL url=getClass().getResource("visualizzazioneCentroVaccinale.fxml");
+        loader.setLocation(url);
+        Parent root=loader.load();
+
+        Scene newScene=new Scene(root);
+
+        Stage currentStage=(Stage)scrollPane_CentriVaccinali.getScene().getWindow();
+        currentStage.setScene(newScene);
+
+        Label lbl_centreName=(Label)newScene.lookup("#lbl_highlitedCentreName");
+        Label lbl_centreAddress=(Label)newScene.lookup("#lbl_highlitedCentreAddress");
+        Label lbl_centreType=(Label)newScene.lookup("#lbl_highlitedCentreType");
+
+        loadCentreInfo(idCentro,lbl_centreName,lbl_centreAddress,lbl_centreType);
+
+        currentStage.show();
+    }
+
+    public void loadCentreInfo(int idCentro, Label lbl_centreName,Label lbl_centreAddress,Label lbl_centreType){
+        try {
+            FileReader fileReader=new FileReader(PATH_TO_CENTRIVACCINALI_DATI);
+            BufferedReader reader=new BufferedReader(fileReader);
+
+            String data=reader.readLine();
+            int i=0;
+            while(i!=idCentro) {
+                data=reader.readLine();
+                i++;
+            }
+
+            StringTokenizer stringTokenizer=new StringTokenizer(data,";");
+            String name=stringTokenizer.nextToken();
+            String address=stringTokenizer.nextToken();
+            String type=stringTokenizer.nextToken();
+
+
+            lbl_centreName.setText(name);
+            lbl_centreAddress.setText(address);
+            lbl_centreType.setText(type);
+
+
+            String events=leggiEventiAvversi(idCentro);
+
+            if(events!=null){
+                Scene currentScene=lbl_centreName.getScene();
+
+                Spinner spn_headache=(Spinner) currentScene.lookup("#spn_headache");
+                Spinner spn_fever=(Spinner) currentScene.lookup("#spn_fever");
+                Spinner spn_hurt=(Spinner) currentScene.lookup("#spn_hurt");
+                Spinner spn_linf=(Spinner) currentScene.lookup("#spn_linf");
+                Spinner spn_tac=(Spinner) currentScene.lookup("#spn_tac");
+                Spinner spn_crs=(Spinner) currentScene.lookup("#spn_crs");
+                TextField txt_other1=(TextField)currentScene.lookup("#txt_other1");
+                Spinner spn_other1=(Spinner)currentScene.lookup("#spn_other1");
+                TextField txt_other2=(TextField)currentScene.lookup("#txt_other2");
+                Spinner spn_other2=(Spinner)currentScene.lookup("#spn_other2");
+
+                StringTokenizer eventTokens=new StringTokenizer(events,";");
+
+
+                spn_headache.setPromptText(eventTokens.nextToken());//evento1 = Mal di testa
+                spn_fever.setPromptText(eventTokens.nextToken()); //evento2 = Febbre
+                spn_hurt.setPromptText(eventTokens.nextToken()); //evento3 = Dolori muscolari o articolari
+                spn_linf.setPromptText(eventTokens.nextToken()); //evento4 = Linfoadenopatia
+                spn_tac.setPromptText(eventTokens.nextToken()); //evento5 = Tachicardia
+                spn_crs.setPromptText(eventTokens.nextToken());//evento6 = Crisi ipertensiva
+                txt_other1.setText(eventTokens.nextToken());
+                spn_other1.setPromptText(eventTokens.nextToken());
+                txt_other2.setText(eventTokens.nextToken());
+                spn_other2.setPromptText(eventTokens.nextToken());
+            }
+
+        }
+        catch (Exception e){
+            e.printStackTrace();
+        }
+
+    }
+
+    public void checkLogin(){
+        if(isLogged){
+            loadRegistraEventiAvversiUI();
+        }
+        else{
+            loadLoginUI();
+        }
+    }
+
+    public void loadRegistraEventiAvversiUI(){
+        try {
+            FXMLLoader loader=new FXMLLoader();
+            URL url=getClass().getResource("registraEventiAvversi.fxml");
+            loader.setLocation(url);
+            Parent root=loader.load();
+
+            Scene scene=new Scene(root);
+            Stage stage=new Stage();
+            stage.setScene(scene);
+
+            stage.show();
+        }
+        catch (Exception e){
+            e.printStackTrace();
+        }
+    }
+
+
+    public void registerEventiAvversi(ActionEvent actionEvent) throws Exception {
+        Scene currentScene=((Button)actionEvent.getSource()).getScene();
+
+        Spinner spn_headache=(Spinner) currentScene.lookup("#spn_headache");
+        Spinner spn_fever=(Spinner) currentScene.lookup("#spn_fever");
+        Spinner spn_hurt=(Spinner) currentScene.lookup("#spn_hurt");
+        Spinner spn_linf=(Spinner) currentScene.lookup("#spn_linf");
+        Spinner spn_tac=(Spinner) currentScene.lookup("#spn_tac");
+        Spinner spn_crs=(Spinner) currentScene.lookup("#spn_crs");
+        TextField txt_other1=(TextField)currentScene.lookup("#txt_other1");
+        Spinner spn_other1=(Spinner)currentScene.lookup("#spn_other1");
+        TextField txt_other2=(TextField)currentScene.lookup("#txt_other2");
+        Spinner spn_other2=(Spinner)currentScene.lookup("#spn_other2");
+
+
+        String evento1 = spn_headache.getPromptText();//evento1 = Mal di testa
+        String evento2 = spn_fever.getPromptText(); //evento2 = Febbre
+        String evento3 = spn_hurt.getPromptText(); //evento3 = Dolori muscolari o articolari
+        String evento4 = spn_linf.getPromptText(); //evento4 = Linfoadenopatia
+        String evento5 = spn_tac.getPromptText(); //evento5 = Tachicardia
+        String evento6 = spn_crs.getPromptText();//evento6 = Crisi ipertensiva
+        String otherEvent1=txt_other1.getText();
+        String otherEvent1Value=spn_other1.getPromptText();
+        String otherEvent2=txt_other2.getText();
+        String otherEvent2Value=spn_other2.getPromptText();
+
+        FileWriter writer = new FileWriter(PATH_TO_EVENTI_AVVERSI, true);
+        BufferedWriter out = new BufferedWriter(writer);
+        //String fileInput =  "Mal di Testa:" + evento1 + ";" + "Febbre:" + evento2 + ";" + "Dolori muscolari o articolari:" + evento3 + ";" + "Linfoadenopatia:" + evento4 + ";" + "Tachicardia:" + evento5 + ";" + "Crisi ipertensiva:" + evento6 + ";";
+        String fileInput =currentCentreID + ";"+  evento1 + ";" + evento2 + ";" + evento3 + ";" + evento4 + ";" + evento5 + ";" + evento6+";"+otherEvent1+";"+otherEvent1Value+";"+otherEvent2+";"+otherEvent2Value;
+        out.write(fileInput);
+        out.newLine();
+        out.flush();
+        out.close();
+
+        Stage stage=(Stage)spn_headache.getScene().getWindow();
+        stage.close();
+    }
+
+    
+    public String leggiEventiAvversi(int idCentro) throws Exception{
+        Vector<SingoloCentroVaccinale> centreList=getCentriVaccinaliFromFile();
+
+        SingoloCentroVaccinale centroVaccinale=centreList.get(idCentro);
+
+        try{
+            FileReader fileReader=new FileReader(PATH_TO_EVENTI_AVVERSI);
+            BufferedReader reader=new BufferedReader(fileReader);
+
+            int index=0;
+
+            String events=reader.readLine();
+
+            while (index!=idCentro){
+                events=reader.readLine();
+                index++;
+            }
+
+           return events;
+
+        }
+        catch (IOException e){
+            e.printStackTrace();
+        }
+
+        return null;
+
+    }
+
+    public void loadLoginUI(){
+        try {
+            FXMLLoader loader = new FXMLLoader();
+            URL url = getClass().getResource("loginCittadino.fxml");
+            loader.setLocation(url);
+            Parent root = loader.load();
+
+            Scene scene = new Scene(root);
+            Stage stage = new Stage();
+            stage.setScene(scene);
+            stage.show();
+        }
+        catch (Exception e){
+            e.printStackTrace();
+        }
+
+    }
+
 
     //TODO Marsio:creare registrazione e login cittadino
     public void registraCittadino() throws Exception {
Index: data/CentriVaccinali.dati.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Nome1;test;test\r\nmovein;cerro;test
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/CentriVaccinali.dati.txt b/data/CentriVaccinali.dati.txt
--- a/data/CentriVaccinali.dati.txt	
+++ b/data/CentriVaccinali.dati.txt	
@@ -1,2 +1,6 @@
+<<<<<<< HEAD
 Nome1;test;test
-movein;cerro;test
\ No newline at end of file
+movein;cerro;test
+=======
+Nome1;prova;prova
+>>>>>>> dd1a73e4612873d9f3587d004c4010c5d44ed14b
Index: bin/production/ProgettoLaboratorio/CentriVaccinali.dati.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Nome1;test;test\r\nmovein;cerro;test
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bin/production/ProgettoLaboratorio/CentriVaccinali.dati.txt b/bin/production/ProgettoLaboratorio/CentriVaccinali.dati.txt
--- a/bin/production/ProgettoLaboratorio/CentriVaccinali.dati.txt	
+++ b/bin/production/ProgettoLaboratorio/CentriVaccinali.dati.txt	
@@ -1,2 +1,1 @@
-Nome1;test;test
-movein;cerro;test
\ No newline at end of file
+Nome1;prova;prova
Index: src/centrivaccinali/CentriVaccinali.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package centrivaccinali;\r\n\r\nimport cittadini.Cittadini;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport javafx.application.Application;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.MessageDigest;\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.util.Scanner;\r\n\r\n//TODO METTERE NOME COGNOME MATRICOLA SEDE\r\npublic class CentriVaccinali extends Application {\r\n    public static final String PATH_TO_CENTRIVACCINALI=\"data/CentriVaccinali.dati.txt\";\r\n    public static final String PATH_TO_CITTADINI_REGISTRATI_DATI=\"data/Cittadini_Registrati.dati.txt\";\r\n    public static final String PATH_TO_DATA=\"data/\";\r\n    public static final String PREFIX = \"Vaccinati_\";\r\n    public static final String SUFFIX = \".dati.txt\";\r\n    CentriVaccinaliUI cUI = new CentriVaccinaliUI();\r\n    Cittadini cittadini;\r\n    @FXML\r\n    private TextField user_txtfield;\r\n    @FXML\r\n    private PasswordField user_password;\r\n    @FXML\r\n    private Button btn_cittadini;\r\n    @FXML\r\n    private Button btn_centriVaccinali;\r\n\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        FXMLLoader loader = new FXMLLoader();\r\n        URL xmlUrl = getClass().getResource(\"SelectionUI.fxml\");\r\n        loader.setLocation(xmlUrl);\r\n\r\n        Parent root = loader.load();\r\n\r\n        Scene scene=new Scene(root);\r\n\r\n\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Pagina iniziale\");\r\n\r\n        InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n        Image image = new Image(icon);\r\n\r\n        stage.getIcons().add(image);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    public static void registraCentroVaccinale(SingoloCentroVaccinale centroVaccinale){ //metodo per registrare i centri\r\n        String nome = centroVaccinale.getNome();\r\n        String indirizzo = centroVaccinale.getIndirizzo();\r\n        String tipologia = centroVaccinale.getTipologia();\r\n        try{\r\n            File file = new File(PATH_TO_DATA+PREFIX+nome+SUFFIX);\r\n            FileWriter fw = new FileWriter(file);\r\n            FileWriter writer = new FileWriter(\"account.txt\", true);\r\n            BufferedWriter out = new BufferedWriter(writer);\r\n            String fileInput = nome + \";\" + tipologia + \";\" + indirizzo;\r\n            out.write(fileInput);\r\n            out.newLine();\r\n            out.flush();\r\n            out.close();\r\n        }catch(IOException e){\r\n            System.out.println(\"\\\"File inesistente o non trovato\\\"\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void stop() throws Exception {\r\n        super.stop();\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String nomeCentroVaccinale)throws FileNotFoundException{ //Ricerca centro per nome, ogni centro che contiene quella \"parte\" di nome, viene visualizzato\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI);\r\n            Scanner reader = new Scanner(file);\r\n            String[] parts;\r\n            while(reader.hasNext()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                if(parts[0].contains(nomeCentroVaccinale)){\r\n                    System.out.println(\"Centri trovati:\"+parts[0]);\r\n                }else{\r\n                    System.out.println(\"Il centro potrebbe non esistere\");\r\n                }\r\n            }\r\n            reader.close();\r\n\r\n        /*parts = line.split(\";\");\r\n        if(parts[0].contains(nomeCentroVaccinale)){\r\n            System.out.println(\"Centro trovato\");\r\n        }else{\r\n            System.out.println(\"Il centro potrebbe non esistere\");\r\n        }\r\n        reader.close();\r\n\r\n         */\r\n        }catch (FileNotFoundException fe) {\r\n            fe.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String comune, String tipologia) throws FileNotFoundException{  //TODO rivedere i tipi dei parametri e try catch\r\n\r\n    }\r\n\r\n    public void visualizzaInfoCentroVaccinale(SingoloCentroVaccinale centroVaccinale){\r\n        System.out.println(centroVaccinale.toString());\r\n\r\n    }\r\n\r\n    public void inserisciEventiAvversi(Object eventoAvverso){  //TODO modificare i parametri\r\n\r\n    }\r\n\r\n    public void onCentriVaccinaliSelected() throws Exception{\r\n        cUI.opzioniLoggato(); //TODO Cri:includere qui dentro la creazione di tutte le UI dei centri vaccinali.\r\n        Stage stage=(Stage)btn_cittadini.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n    public void onCittadiniSelected(){\r\n        cittadini=new Cittadini();\r\n        try {\r\n            cittadini.loadUI();\r\n            Stage stage=(Stage)btn_cittadini.getScene().getWindow();\r\n            stage.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public void onRegisterClicked() throws Exception{ //TODO FAR ANDARE A CAPO QUANDO SCRIVE\r\n        String pwd = user_password.getText();\r\n        String user = user_txtfield.getText();\r\n\r\n        /*Hashing della password per renderla one-way\r\n        MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controlalre che questo controllore sia giusto. sul web dicono che non funzioni correttamente\r\n\r\n        try{\r\n            MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n            byte[] hash = messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8));\r\n            pwd = toHexString(hash);\r\n            System.out.println(pwd);\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        FileWriter writer = new FileWriter(PATH_TO_CITTADINI_REGISTRATI_DATI,true);\r\n        BufferedWriter out = new BufferedWriter(writer);\r\n        String scrivi = user+\";\"+pwd;\r\n        out.write(scrivi);\r\n        out.newLine();\r\n        out.close();\r\n    }\r\n\r\n    private String toHexString(byte[] array) {\r\n        StringBuilder sb = new StringBuilder(array.length * 2);\r\n\r\n        for (byte b : array){\r\n            int value = 0xFF & b;\r\n            String toAppend = Integer.toHexString(value);\r\n\r\n            sb.append(toAppend);\r\n        }\r\n        sb.setLength(sb.length()-1);\r\n        return sb.toString();\r\n    }\r\n\r\n    public void onLoginClicked() {\r\n        String user = user_txtfield.getText();\r\n        String pwd = user_password.getText();\r\n        String user_temp; //questi temp sono i \"candidati\" user e psw presi dal reader dal file\r\n        String pwd_temp;\r\n        String[] parts;//contenitore per il metodo split\r\n\r\n        try {\r\n            if (!user.equals(\"\") && !pwd.equals(\"\")) {\r\n                File file = new File(PATH_TO_CITTADINI_REGISTRATI_DATI);\r\n                Scanner reader = new Scanner(file);\r\n                while (reader.hasNextLine()) {\r\n                    String line = reader.nextLine();\r\n                    parts = line.split(\";\");\r\n                    user_temp = parts[0];\r\n                    pwd_temp = parts[1];\r\n\r\n                    MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n                    pwd_temp = new String(messageDigest.digest(pwd_temp.getBytes(StandardCharsets.UTF_8))); //TODO Rivedere controllore\r\n\r\n                    if (user_temp.equals(user) && pwd_temp.equals(pwd)) {\r\n                        System.out.println(\"LOGGATO\");  //in qualche modo qui caricherà la nuova interface, vai pole divertiti\r\n                    } else {\r\n                        System.out.println(\"User inesistente, premere sul tasto 'register'\");//popup magari (?)\r\n                        /*\r\n                        JOptionPane.showMessageDialog(null,\r\n                            \"User inesistente, premere sul tasto 'register'\",\r\n                            JOptionPane.ERROR_MESSAGE);                           popup?\r\n                        */\r\n                    }\r\n                }\r\n            } else {\r\n                System.out.println(\"Inserire dei dati\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    public void onNewVaccinateClicked(){\r\n        cUI.onNewVaccinateClicked();\r\n\r\n    }\r\n\r\n\r\n\r\n    public static void main(String[] args) throws Exception {\r\n         Application.launch();\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/centrivaccinali/CentriVaccinali.java b/src/centrivaccinali/CentriVaccinali.java
--- a/src/centrivaccinali/CentriVaccinali.java	
+++ b/src/centrivaccinali/CentriVaccinali.java	
@@ -1,6 +1,9 @@
 package centrivaccinali;
 
 import cittadini.Cittadini;
+import cittadini.SingoloCittadino;
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
@@ -14,6 +17,8 @@
 import java.security.MessageDigest;
 import java.io.*;
 import java.net.URL;
+import java.time.LocalDate;
+import java.time.format.DateTimeFormatter;
 import java.util.Scanner;
 
 //TODO METTERE NOME COGNOME MATRICOLA SEDE
@@ -23,7 +28,11 @@
     public static final String PATH_TO_DATA="data/";
     public static final String PREFIX = "Vaccinati_";
     public static final String SUFFIX = ".dati.txt";
-    CentriVaccinaliUI cUI = new CentriVaccinaliUI();
+    private ObservableList<String> vaccino_somministrato_items = FXCollections.observableArrayList("Pfizer","AstraZeneca","Moderna","J&J");
+    private ObservableList<String> centro_vaccinale_items = FXCollections.observableArrayList();
+    private ObservableList<String> qualificatore_items = FXCollections.observableArrayList("via","v.le","pzza");
+    public static final String PATH_TO_CENTRIVACCINALI_DATI = "data/CentriVaccinali.dati.txt";
+    private Scene scene;
     Cittadini cittadini;
     @FXML
     private TextField user_txtfield;
@@ -33,6 +42,37 @@
     private Button btn_cittadini;
     @FXML
     private Button btn_centriVaccinali;
+    @FXML
+    private javafx.scene.control.TextField nome_paziente;
+    @FXML
+    private javafx.scene.control.TextField cognome_paziente;
+    @FXML
+    private javafx.scene.control.TextField cf_paziente;
+    @FXML
+    private TextField ID_vaccinazione;
+    @FXML
+    private ChoiceBox<String> vaccino_somministrato;
+    @FXML
+    private DatePicker data_vaccinazione;
+    @FXML
+    private ChoiceBox<String> centro_vaccinale;
+    @FXML
+    private TextField nome_centro;
+    @FXML
+    private TextField nome_via;
+    @FXML
+    private TextField numero_civico;
+    @FXML
+    private TextField comune;
+    @FXML
+    private TextField provincia;
+    @FXML
+    private TextField cap;
+    @FXML
+    private ChoiceBox<String> qualificatore;
+    @FXML
+    private Button annulla;
+
 
 
 
@@ -58,24 +98,40 @@
     }
 
 
-    public static void registraCentroVaccinale(SingoloCentroVaccinale centroVaccinale){ //metodo per registrare i centri
-        String nome = centroVaccinale.getNome();
-        String indirizzo = centroVaccinale.getIndirizzo();
-        String tipologia = centroVaccinale.getTipologia();
-        try{
-            File file = new File(PATH_TO_DATA+PREFIX+nome+SUFFIX);
-            FileWriter fw = new FileWriter(file);
-            FileWriter writer = new FileWriter("account.txt", true);
-            BufferedWriter out = new BufferedWriter(writer);
-            String fileInput = nome + ";" + tipologia + ";" + indirizzo;
-            out.write(fileInput);
-            out.newLine();
-            out.flush();
-            out.close();
-        }catch(IOException e){
-            System.out.println("\"File inesistente o non trovato\"");
+    public void registraCentroVaccinale(){
+        String nome = nome_centro.getText();
+        String qualif = qualificatore.getValue();
+        String via = nome_via.getText();
+        String civico = numero_civico.getText();
+        String com = comune.getText();
+        String prov = provincia.getText();
+        String Cap = cap.getText();
+        if(nome.equals("") || qualif==null || via.equals("")|| civico.equals("")|| com.equals("")|| prov.equals("")|| Cap.equals("")){
+            Alert alert = new Alert(Alert.AlertType.ERROR);
+            alert.setTitle("Errore");
+            alert.setHeaderText(null);
+            alert.setContentText("Controllare i dati inseriti");
+            alert.showAndWait();
+        }else{
+            try{
+                File file = new File(PATH_TO_CENTRIVACCINALI_DATI);
+                BufferedWriter out = new BufferedWriter(new FileWriter(file,true));
+                String output = nome+";"+qualif+";"+via+";"+civico+";"+com+";"+prov+";"+Cap;
+                out.write(output);
+                out.newLine();
+                out.flush();
+                out.close();
+                Alert alert = new Alert(Alert.AlertType.INFORMATION);
+                alert.setTitle("Successo");
+                alert.setHeaderText(null);
+                alert.setContentText("Centro vaccinale registrato");
+                alert.showAndWait();
+            }catch (IOException e){
+                e.toString();
+            }
         }
     }
+
 
     @Override
     public void stop() throws Exception {
@@ -125,16 +181,103 @@
 
     }
 
-    public void onCentriVaccinaliSelected() throws Exception{
-        cUI.opzioniLoggato(); //TODO Cri:includere qui dentro la creazione di tutte le UI dei centri vaccinali.
-        Stage stage=(Stage)btn_cittadini.getScene().getWindow();
-        stage.close();
+    public void onCentriVaccinaliSelected(){
+        try {
+            FXMLLoader loader = new FXMLLoader();
+            URL xmlUrl = getClass().getResource("opzioniLoggato.fxml");
+            loader.setLocation(xmlUrl);
+
+            Parent root = loader.load();
+
+            scene = new Scene(root);
+
+            Stage stage = new Stage();
+            stage.setScene(scene);
+            stage.setTitle("opzioniLoggato");
+
+            InputStream icon = getClass().getResourceAsStream("fiorellino.png");
+            Image image = new Image(icon);
+
+            stage.getIcons().add(image);
+
+            stage.show();
+        }
+        catch (IOException e){
+            e.printStackTrace();
+        }
     }
+
+    public void onNuovoCentroSelected(){
+        try {
+            FXMLLoader loader = new FXMLLoader();
+            URL xmlUrl = getClass().getResource("nuovoCentroVaccinale.fxml");
+            loader.setLocation(xmlUrl);
+
+            Parent root = loader.load();
+
+            scene = new Scene(root);
+
+            Stage stage = new Stage();
+            stage.setScene(scene);
+            stage.setTitle("Nuovo centro vaccinale");
+
+            InputStream icon = getClass().getResourceAsStream("fiorellino.png");
+            Image image = new Image(icon);
+
+            stage.getIcons().add(image);
+
+            stage.show();
+        }
+        catch (IOException e){
+            e.printStackTrace();
+        }
+
+
+    }
+
+    public void registraVaccinato(){
+        //TODO chiamare questo metodo dopo registrazione (pole deve fare la sua parte)
+        String nome = nome_paziente.getText();
+        String cognome = cognome_paziente.getText();
+        String codice_fiscale =cf_paziente.getText();
+        String tipoVaccino = vaccino_somministrato.getValue();
+        String centroVaccinale = centro_vaccinale.getValue();
+        String id_vaccino = ID_vaccinazione.getText();
+        LocalDate dataVaccino = data_vaccinazione.getValue();
+        String dataVaccinazione = dataVaccino.format(DateTimeFormatter.ofPattern("MMM-dd-yyyy"));
+
+
+        SingoloCittadino cittadino = new SingoloCittadino(nome,cognome,codice_fiscale);
+        cittadino.setCentroVaccinale(centroVaccinale);
+        cittadino.setIdVaccino(Integer.parseInt(id_vaccino));
+
+        int idVaccino = cittadino.getIdVaccino();
+
+        String output = nome+";"+cognome+";"+codice_fiscale+";"+tipoVaccino+";"+idVaccino+";"+dataVaccinazione;
+        String file_ID = "data/"+"Vaccinati_"+centroVaccinale+".dati.txt";
+        try{
+            FileWriter writer = new FileWriter(file_ID,true);
+            BufferedWriter out = new BufferedWriter(writer);
+            out.write(output);
+            out.flush();
+            out.newLine();
+            out.close();
+            writer.close();
+            Alert alert = new Alert(Alert.AlertType.INFORMATION);
+            alert.setTitle("Successo");
+            alert.setHeaderText(null);
+            alert.setContentText("Paziente registrato a sistema");
+            alert.showAndWait();
+        }catch (IOException e){
+            e.toString();
+        }
+    }
+
 
     public void onCittadiniSelected(){
         cittadini=new Cittadini();
         try {
-            cittadini.loadUI();
+            cittadini.loadMainCittadiniUI();
             Stage stage=(Stage)btn_cittadini.getScene().getWindow();
             stage.close();
         } catch (Exception e) {
@@ -149,7 +292,7 @@
 
         /*Hashing della password per renderla one-way
         MessageDigest messageDigest=MessageDigest.getInstance("SHA-256");
-        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controlalre che questo controllore sia giusto. sul web dicono che non funzioni correttamente
+        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controllare che questo controllore sia giusto. sul web dicono che non funzioni correttamente
 
         try{
             MessageDigest messageDigest=MessageDigest.getInstance("SHA-256");
@@ -220,12 +363,71 @@
         }
     }
 
+    public void onNewVaccinate(){
+        try {
+            FXMLLoader loader = new FXMLLoader();
+            URL xmlUrl = getClass().getResource("nuovoPaziente.fxml");
+            loader.setLocation(xmlUrl);
+
+            Parent root = loader.load();
+
+
+
+            scene = new Scene(root);
+
+            Stage stage = new Stage();
+            stage.setScene(scene);
+            stage.setTitle("Nuovo Paziente");
+
+
+
+            InputStream icon = getClass().getResourceAsStream("fiorellino.png");
+            Image image = new Image(icon);
+            stage.getIcons().add(image);
+            stage.show();
+
+        }
+        catch (IOException e){
+            e.printStackTrace();
+        }
+    }
+
+    public void vaccino_somministrato_setter(){
+        vaccino_somministrato.setItems(vaccino_somministrato_items);
+    }
+
+    public void qualificatore_setter(){
+        qualificatore.setItems(qualificatore_items);
+    }
+
+    public void centro_vaccinale_setter(){
+        String[] parts;
+        String nome_centro_vaccinale="";
+        try{
+            File file = new File(PATH_TO_CENTRIVACCINALI_DATI);
+            Scanner reader = new Scanner(file);
+            while (reader.hasNextLine()){
+                String line = reader.nextLine();
+                parts = line.split(";");
+                nome_centro_vaccinale = parts[0];
+                if(!centro_vaccinale_items.contains(nome_centro_vaccinale))
+                    centro_vaccinale_items.add(nome_centro_vaccinale);
+            }
+            centro_vaccinale.setItems(centro_vaccinale_items);
+        }catch (IOException e){
+            e.printStackTrace();
+        }
+    }
+
+    public void annulla_button(){
+        Stage stage = (Stage)annulla.getScene().getWindow();
+        stage.close();
+    }
 
 
 
     public void onNewVaccinateClicked(){
-        cUI.onNewVaccinateClicked();
-
+        onNewVaccinate();
     }
 
 
Index: .idea/shelf/Uncommitted_changes_before_rebase_[Default_Changelist]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase_[Default_Changelist]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_rebase_[Default_Changelist]1/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_rebase_[Default_Changelist]1/shelved.patch	
@@ -0,0 +1,325 @@
+Index: src/centrivaccinali/CentriVaccinali.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package centrivaccinali;\r\n\r\nimport cittadini.Cittadini;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport javafx.application.Application;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.MessageDigest;\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.util.Scanner;\r\n\r\n//TODO METTERE NOME COGNOME MATRICOLA SEDE\r\npublic class CentriVaccinali extends Application {\r\n    public static final String PATH_TO_CENTRIVACCINALI=\"data/CentriVaccinali.dati.txt\";\r\n    public static final String PATH_TO_CITTADINI_REGISTRATI_DATI=\"data/Cittadini_Registrati.dati.txt\";\r\n    public static final String PATH_TO_DATA=\"data/\";\r\n    public static final String PREFIX = \"Vaccinati_\";\r\n    public static final String SUFFIX = \".dati.txt\";\r\n    CentriVaccinaliUI cUI = new CentriVaccinaliUI();\r\n    Cittadini cittadini;\r\n    @FXML\r\n    private TextField user_txtfield;\r\n    @FXML\r\n    private PasswordField user_password;\r\n    @FXML\r\n    private Button btn_cittadini;\r\n    @FXML\r\n    private Button btn_centriVaccinali;\r\n\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        FXMLLoader loader = new FXMLLoader();\r\n        URL xmlUrl = getClass().getResource(\"SelectionUI.fxml\");\r\n        loader.setLocation(xmlUrl);\r\n\r\n        Parent root = loader.load();\r\n\r\n        Scene scene=new Scene(root);\r\n\r\n\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Pagina iniziale\");\r\n\r\n        InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n        Image image = new Image(icon);\r\n\r\n        stage.getIcons().add(image);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    public static void registraCentroVaccinale(SingoloCentroVaccinale centroVaccinale){ //metodo per registrare i centri\r\n        String nome = centroVaccinale.getNome();\r\n        String indirizzo = centroVaccinale.getIndirizzo();\r\n        String tipologia = centroVaccinale.getTipologia();\r\n        try{\r\n            File file = new File(PATH_TO_DATA+PREFIX+nome+SUFFIX);\r\n            FileWriter fw = new FileWriter(file);\r\n            FileWriter writer = new FileWriter(\"account.txt\", true);\r\n            BufferedWriter out = new BufferedWriter(writer);\r\n            String fileInput = nome + \";\" + tipologia + \";\" + indirizzo;\r\n            out.write(fileInput);\r\n            out.newLine();\r\n            out.flush();\r\n            out.close();\r\n        }catch(IOException e){\r\n            System.out.println(\"\\\"File inesistente o non trovato\\\"\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void stop() throws Exception {\r\n        super.stop();\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String nomeCentroVaccinale)throws FileNotFoundException{ //Ricerca centro per nome, ogni centro che contiene quella \"parte\" di nome, viene visualizzato\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI);\r\n            Scanner reader = new Scanner(file);\r\n            String[] parts;\r\n            while(reader.hasNext()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                if(parts[0].contains(nomeCentroVaccinale)){\r\n                    System.out.println(\"Centri trovati:\"+parts[0]);\r\n                }else{\r\n                    System.out.println(\"Il centro potrebbe non esistere\");\r\n                }\r\n            }\r\n            reader.close();\r\n\r\n        /*parts = line.split(\";\");\r\n        if(parts[0].contains(nomeCentroVaccinale)){\r\n            System.out.println(\"Centro trovato\");\r\n        }else{\r\n            System.out.println(\"Il centro potrebbe non esistere\");\r\n        }\r\n        reader.close();\r\n\r\n         */\r\n        }catch (FileNotFoundException fe) {\r\n            fe.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String comune, String tipologia) throws FileNotFoundException{  //TODO rivedere i tipi dei parametri e try catch\r\n\r\n    }\r\n\r\n    public void visualizzaInfoCentroVaccinale(SingoloCentroVaccinale centroVaccinale){\r\n        System.out.println(centroVaccinale.toString());\r\n\r\n    }\r\n\r\n    public void inserisciEventiAvversi(Object eventoAvverso){  //TODO modificare i parametri\r\n\r\n    }\r\n\r\n    public void onCentriVaccinaliSelected() throws Exception{\r\n        cUI.opzioniLoggato(); //TODO Cri:includere qui dentro la creazione di tutte le UI dei centri vaccinali.\r\n        Stage stage=(Stage)btn_cittadini.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n    public void onCittadiniSelected(){\r\n        cittadini=new Cittadini();\r\n        try {\r\n            cittadini.loadUI();\r\n            Stage stage=(Stage)btn_cittadini.getScene().getWindow();\r\n            stage.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public void onRegisterClicked() throws Exception{ //TODO FAR ANDARE A CAPO QUANDO SCRIVE\r\n        String pwd = user_password.getText();\r\n        String user = user_txtfield.getText();\r\n\r\n        /*Hashing della password per renderla one-way\r\n        MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controlalre che questo controllore sia giusto. sul web dicono che non funzioni correttamente\r\n\r\n        try{\r\n            MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n            byte[] hash = messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8));\r\n            pwd = toHexString(hash);\r\n            System.out.println(pwd);\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        FileWriter writer = new FileWriter(PATH_TO_CITTADINI_REGISTRATI_DATI,true);\r\n        BufferedWriter out = new BufferedWriter(writer);\r\n        String scrivi = user+\";\"+pwd;\r\n        out.write(scrivi);\r\n        out.newLine();\r\n        out.close();\r\n    }\r\n\r\n    private String toHexString(byte[] array) {\r\n        StringBuilder sb = new StringBuilder(array.length * 2);\r\n\r\n        for (byte b : array){\r\n            int value = 0xFF & b;\r\n            String toAppend = Integer.toHexString(value);\r\n\r\n            sb.append(toAppend);\r\n        }\r\n        sb.setLength(sb.length()-1);\r\n        return sb.toString();\r\n    }\r\n\r\n    public void onLoginClicked() {\r\n        String user = user_txtfield.getText();\r\n        String pwd = user_password.getText();\r\n        String user_temp; //questi temp sono i \"candidati\" user e psw presi dal reader dal file\r\n        String pwd_temp;\r\n        String[] parts;//contenitore per il metodo split\r\n\r\n        try {\r\n            if (!user.equals(\"\") && !pwd.equals(\"\")) {\r\n                File file = new File(PATH_TO_CITTADINI_REGISTRATI_DATI);\r\n                Scanner reader = new Scanner(file);\r\n                while (reader.hasNextLine()) {\r\n                    String line = reader.nextLine();\r\n                    parts = line.split(\";\");\r\n                    user_temp = parts[0];\r\n                    pwd_temp = parts[1];\r\n\r\n                    MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n                    pwd_temp = new String(messageDigest.digest(pwd_temp.getBytes(StandardCharsets.UTF_8))); //TODO Rivedere controllore\r\n\r\n                    if (user_temp.equals(user) && pwd_temp.equals(pwd)) {\r\n                        System.out.println(\"LOGGATO\");  //in qualche modo qui caricherà la nuova interface, vai pole divertiti\r\n                    } else {\r\n                        System.out.println(\"User inesistente, premere sul tasto 'register'\");//popup magari (?)\r\n                        /*\r\n                        JOptionPane.showMessageDialog(null,\r\n                            \"User inesistente, premere sul tasto 'register'\",\r\n                            JOptionPane.ERROR_MESSAGE);                           popup?\r\n                        */\r\n                    }\r\n                }\r\n            } else {\r\n                System.out.println(\"Inserire dei dati\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    public void onNewVaccinateClicked(){\r\n        cUI.onNewVaccinateClicked();\r\n\r\n    }\r\n\r\n\r\n\r\n    public static void main(String[] args) throws Exception {\r\n         Application.launch();\r\n\r\n    }\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/centrivaccinali/CentriVaccinali.java b/src/centrivaccinali/CentriVaccinali.java
+--- a/src/centrivaccinali/CentriVaccinali.java	(revision c3d27c69871d259e0540b61f601b39852d2c06be)
++++ b/src/centrivaccinali/CentriVaccinali.java	(date 1629125621576)
+@@ -1,6 +1,9 @@
+ package centrivaccinali;
+ 
+ import cittadini.Cittadini;
++import cittadini.SingoloCittadino;
++import javafx.collections.FXCollections;
++import javafx.collections.ObservableList;
+ import javafx.event.ActionEvent;
+ import javafx.fxml.FXML;
+ import javafx.fxml.FXMLLoader;
+@@ -14,6 +17,8 @@
+ import java.security.MessageDigest;
+ import java.io.*;
+ import java.net.URL;
++import java.time.LocalDate;
++import java.time.format.DateTimeFormatter;
+ import java.util.Scanner;
+ 
+ //TODO METTERE NOME COGNOME MATRICOLA SEDE
+@@ -23,7 +28,11 @@
+     public static final String PATH_TO_DATA="data/";
+     public static final String PREFIX = "Vaccinati_";
+     public static final String SUFFIX = ".dati.txt";
+-    CentriVaccinaliUI cUI = new CentriVaccinaliUI();
++    private ObservableList<String> vaccino_somministrato_items = FXCollections.observableArrayList("Pfizer","AstraZeneca","Moderna","J&J");
++    private ObservableList<String> centro_vaccinale_items = FXCollections.observableArrayList();
++    private ObservableList<String> qualificatore_items = FXCollections.observableArrayList("via","v.le","pzza");
++    public static final String PATH_TO_CENTRIVACCINALI_DATI = "data/CentriVaccinali.dati.txt";
++    private Scene scene;
+     Cittadini cittadini;
+     @FXML
+     private TextField user_txtfield;
+@@ -33,6 +42,37 @@
+     private Button btn_cittadini;
+     @FXML
+     private Button btn_centriVaccinali;
++    @FXML
++    private javafx.scene.control.TextField nome_paziente;
++    @FXML
++    private javafx.scene.control.TextField cognome_paziente;
++    @FXML
++    private javafx.scene.control.TextField cf_paziente;
++    @FXML
++    private TextField ID_vaccinazione;
++    @FXML
++    private ChoiceBox<String> vaccino_somministrato;
++    @FXML
++    private DatePicker data_vaccinazione;
++    @FXML
++    private ChoiceBox<String> centro_vaccinale;
++    @FXML
++    private TextField nome_centro;
++    @FXML
++    private TextField nome_via;
++    @FXML
++    private TextField numero_civico;
++    @FXML
++    private TextField comune;
++    @FXML
++    private TextField provincia;
++    @FXML
++    private TextField cap;
++    @FXML
++    private ChoiceBox<String> qualificatore;
++    @FXML
++    private Button annulla;
++
+ 
+ 
+ 
+@@ -58,22 +98,37 @@
+     }
+ 
+ 
+-    public static void registraCentroVaccinale(SingoloCentroVaccinale centroVaccinale){ //metodo per registrare i centri
+-        String nome = centroVaccinale.getNome();
+-        String indirizzo = centroVaccinale.getIndirizzo();
+-        String tipologia = centroVaccinale.getTipologia();
+-        try{
+-            File file = new File(PATH_TO_DATA+PREFIX+nome+SUFFIX);
+-            FileWriter fw = new FileWriter(file);
+-            FileWriter writer = new FileWriter("account.txt", true);
+-            BufferedWriter out = new BufferedWriter(writer);
+-            String fileInput = nome + ";" + tipologia + ";" + indirizzo;
+-            out.write(fileInput);
+-            out.newLine();
+-            out.flush();
+-            out.close();
+-        }catch(IOException e){
+-            System.out.println("\"File inesistente o non trovato\"");
++    public void registraCentroVaccinale(){
++        String nome = nome_centro.getText();
++        String qualif = qualificatore.getValue();
++        String via = nome_via.getText();
++        String civico = numero_civico.getText();
++        String com = comune.getText();
++        String prov = provincia.getText();
++        String Cap = cap.getText();
++        if(nome.equals("") || qualif==null || via.equals("")|| civico.equals("")|| com.equals("")|| prov.equals("")|| Cap.equals("")){
++            Alert alert = new Alert(Alert.AlertType.ERROR);
++            alert.setTitle("Errore");
++            alert.setHeaderText(null);
++            alert.setContentText("Controllare i dati inseriti");
++            alert.showAndWait();
++        }else{
++            try{
++                File file = new File(PATH_TO_CENTRIVACCINALI_DATI);
++                BufferedWriter out = new BufferedWriter(new FileWriter(file,true));
++                String output = nome+";"+qualif+";"+via+";"+civico+";"+com+";"+prov+";"+Cap;
++                out.write(output);
++                out.newLine();
++                out.flush();
++                out.close();
++                Alert alert = new Alert(Alert.AlertType.INFORMATION);
++                alert.setTitle("Successo");
++                alert.setHeaderText(null);
++                alert.setContentText("Centro vaccinale registrato");
++                alert.showAndWait();
++            }catch (IOException e){
++                e.toString();
++            }
+         }
+     }
+ 
+@@ -125,16 +180,102 @@
+ 
+     }
+ 
+-    public void onCentriVaccinaliSelected() throws Exception{
+-        cUI.opzioniLoggato(); //TODO Cri:includere qui dentro la creazione di tutte le UI dei centri vaccinali.
+-        Stage stage=(Stage)btn_cittadini.getScene().getWindow();
+-        stage.close();
++    public void onCentriVaccinaliSelected(){
++        try {
++            FXMLLoader loader = new FXMLLoader();
++            URL xmlUrl = getClass().getResource("opzioniLoggato.fxml");
++            loader.setLocation(xmlUrl);
++
++            Parent root = loader.load();
++
++            scene = new Scene(root);
++
++            Stage stage = new Stage();
++            stage.setScene(scene);
++            stage.setTitle("opzioniLoggato");
++
++            InputStream icon = getClass().getResourceAsStream("fiorellino.png");
++            Image image = new Image(icon);
++
++            stage.getIcons().add(image);
++
++            stage.show();
++        }
++        catch (IOException e){
++            e.printStackTrace();
++        }
+     }
++
++    public void onNuovoCentroSelected(){
++        try {
++            FXMLLoader loader = new FXMLLoader();
++            URL xmlUrl = getClass().getResource("nuovoCentroVaccinale.fxml");
++            loader.setLocation(xmlUrl);
++
++            Parent root = loader.load();
++
++            scene = new Scene(root);
++
++            Stage stage = new Stage();
++            stage.setScene(scene);
++            stage.setTitle("Nuovo centro vaccinale");
++
++            InputStream icon = getClass().getResourceAsStream("fiorellino.png");
++            Image image = new Image(icon);
++
++            stage.getIcons().add(image);
++
++            stage.show();
++        }
++        catch (IOException e){
++            e.printStackTrace();
++        }
++
++    }
++
++    public void registraVaccinato(){
++        //TODO chiamare questo metodo dopo registrazione (pole deve fare la sua parte)
++        String nome = nome_paziente.getText();
++        String cognome = cognome_paziente.getText();
++        String codice_fiscale =cf_paziente.getText();
++        String tipoVaccino = vaccino_somministrato.getValue();
++        String centroVaccinale = centro_vaccinale.getValue();
++        String id_vaccino = ID_vaccinazione.getText();
++        LocalDate dataVaccino = data_vaccinazione.getValue();
++        String dataVaccinazione = dataVaccino.format(DateTimeFormatter.ofPattern("MMM-dd-yyyy"));
++
++
++        SingoloCittadino cittadino = new SingoloCittadino(nome,cognome,codice_fiscale);
++        cittadino.setCentroVaccinale(centroVaccinale);
++        cittadino.setIdVaccino(Integer.parseInt(id_vaccino));
++
++        int idVaccino = cittadino.getIdVaccino();
++
++        String output = nome+";"+cognome+";"+codice_fiscale+";"+tipoVaccino+";"+idVaccino+";"+dataVaccinazione;
++        String file_ID = "data/"+"Vaccinati_"+centroVaccinale+".dati.txt";
++        try{
++            FileWriter writer = new FileWriter(file_ID,true);
++            BufferedWriter out = new BufferedWriter(writer);
++            out.write(output);
++            out.flush();
++            out.newLine();
++            out.close();
++            writer.close();
++            Alert alert = new Alert(Alert.AlertType.INFORMATION);
++            alert.setTitle("Successo");
++            alert.setHeaderText(null);
++            alert.setContentText("Paziente registrato a sistema");
++            alert.showAndWait();
++        }catch (IOException e){
++            e.toString();
++        }
++    }
++
+ 
+     public void onCittadiniSelected(){
+         cittadini=new Cittadini();
+         try {
+-            cittadini.loadUI();
++            cittadini.loadMainCittadiniUI();
+             Stage stage=(Stage)btn_cittadini.getScene().getWindow();
+             stage.close();
+         } catch (Exception e) {
+@@ -149,7 +290,7 @@
+ 
+         /*Hashing della password per renderla one-way
+         MessageDigest messageDigest=MessageDigest.getInstance("SHA-256");
+-        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controlalre che questo controllore sia giusto. sul web dicono che non funzioni correttamente
++        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controllare che questo controllore sia giusto. sul web dicono che non funzioni correttamente
+ 
+         try{
+             MessageDigest messageDigest=MessageDigest.getInstance("SHA-256");
+@@ -220,12 +361,71 @@
+         }
+     }
+ 
++    public void onNewVaccinate(){
++        try {
++            FXMLLoader loader = new FXMLLoader();
++            URL xmlUrl = getClass().getResource("nuovoPaziente.fxml");
++            loader.setLocation(xmlUrl);
++
++            Parent root = loader.load();
++
++
++
++            scene = new Scene(root);
++
++            Stage stage = new Stage();
++            stage.setScene(scene);
++            stage.setTitle("Nuovo Paziente");
++
++
++
++            InputStream icon = getClass().getResourceAsStream("fiorellino.png");
++            Image image = new Image(icon);
++            stage.getIcons().add(image);
++            stage.show();
++
++        }
++        catch (IOException e){
++            e.printStackTrace();
++        }
++    }
++
++    public void vaccino_somministrato_setter(){
++        vaccino_somministrato.setItems(vaccino_somministrato_items);
++    }
++
++    public void qualificatore_setter(){
++        qualificatore.setItems(qualificatore_items);
++    }
++
++    public void centro_vaccinale_setter(){
++        String[] parts;
++        String nome_centro_vaccinale="";
++        try{
++            File file = new File(PATH_TO_CENTRIVACCINALI_DATI);
++            Scanner reader = new Scanner(file);
++            while (reader.hasNextLine()){
++                String line = reader.nextLine();
++                parts = line.split(";");
++                nome_centro_vaccinale = parts[0];
++                if(!centro_vaccinale_items.contains(nome_centro_vaccinale))
++                    centro_vaccinale_items.add(nome_centro_vaccinale);
++            }
++            centro_vaccinale.setItems(centro_vaccinale_items);
++        }catch (IOException e){
++            e.printStackTrace();
++        }
++    }
++
++    public void annulla_button(){
++        Stage stage = (Stage)annulla.getScene().getWindow();
++        stage.close();
++    }
+ 
+ 
+ 
+     public void onNewVaccinateClicked(){
+-        cUI.onNewVaccinateClicked();
+-
++        onNewVaccinate();
+     }
+ 
+ 
Index: .idea/shelf/Uncommitted_changes_before_rebase_[Default_Changelist]2/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase_[Default_Changelist]2/shelved.patch b/.idea/shelf/Uncommitted_changes_before_rebase_[Default_Changelist]2/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_rebase_[Default_Changelist]2/shelved.patch	
@@ -0,0 +1,35 @@
+Index: src/centrivaccinali/CentriVaccinali.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package centrivaccinali;\r\n\r\nimport cittadini.Cittadini;\r\nimport cittadini.SingoloCittadino;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport javafx.application.Application;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.MessageDigest;\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.Scanner;\r\n\r\n//TODO METTERE NOME COGNOME MATRICOLA SEDE\r\npublic class CentriVaccinali extends Application {\r\n    public static final String PATH_TO_CENTRIVACCINALI=\"data/CentriVaccinali.dati.txt\";\r\n    public static final String PATH_TO_CITTADINI_REGISTRATI_DATI=\"data/Cittadini_Registrati.dati.txt\";\r\n    public static final String PATH_TO_DATA=\"data/\";\r\n    public static final String PREFIX = \"Vaccinati_\";\r\n    public static final String SUFFIX = \".dati.txt\";\r\n    private ObservableList<String> vaccino_somministrato_items = FXCollections.observableArrayList(\"Pfizer\",\"AstraZeneca\",\"Moderna\",\"J&J\");\r\n    private ObservableList<String> centro_vaccinale_items = FXCollections.observableArrayList();\r\n    private ObservableList<String> qualificatore_items = FXCollections.observableArrayList(\"via\",\"v.le\",\"pzza\");\r\n    public static final String PATH_TO_CENTRIVACCINALI_DATI = \"data/CentriVaccinali.dati.txt\";\r\n    private Scene scene;\r\n    Cittadini cittadini;\r\n    @FXML\r\n    private TextField user_txtfield;\r\n    @FXML\r\n    private PasswordField user_password;\r\n    @FXML\r\n    private Button btn_cittadini;\r\n    @FXML\r\n    private Button btn_centriVaccinali;\r\n    @FXML\r\n    private javafx.scene.control.TextField nome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cognome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cf_paziente;\r\n    @FXML\r\n    private TextField ID_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> vaccino_somministrato;\r\n    @FXML\r\n    private DatePicker data_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> centro_vaccinale;\r\n    @FXML\r\n    private TextField nome_centro;\r\n    @FXML\r\n    private TextField nome_via;\r\n    @FXML\r\n    private TextField numero_civico;\r\n    @FXML\r\n    private TextField comune;\r\n    @FXML\r\n    private TextField provincia;\r\n    @FXML\r\n    private TextField cap;\r\n    @FXML\r\n    private ChoiceBox<String> qualificatore;\r\n    @FXML\r\n    private Button annulla;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        FXMLLoader loader = new FXMLLoader();\r\n        URL xmlUrl = getClass().getResource(\"SelectionUI.fxml\");\r\n        loader.setLocation(xmlUrl);\r\n\r\n        Parent root = loader.load();\r\n\r\n        Scene scene=new Scene(root);\r\n\r\n\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Pagina iniziale\");\r\n\r\n        InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n        Image image = new Image(icon);\r\n\r\n        stage.getIcons().add(image);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    /*public static void registraCentroVaccinale(SingoloCentroVaccinale centroVaccinale){ //metodo per registrare i centri\r\n        String nome = centroVaccinale.getNome();\r\n        String indirizzo = centroVaccinale.getIndirizzo();\r\n        String tipologia = centroVaccinale.getTipologia();\r\n        try{\r\n            File file = new File(PATH_TO_DATA+PREFIX+nome+SUFFIX);\r\n            FileWriter fw = new FileWriter(file);\r\n            FileWriter writer = new FileWriter(\"account.txt\", true);\r\n            BufferedWriter out = new BufferedWriter(writer);\r\n            String fileInput = nome + \";\" + tipologia + \";\" + indirizzo;\r\n            out.write(fileInput);\r\n            out.newLine();\r\n            out.flush();\r\n            out.close();\r\n        }catch(IOException e){\r\n            System.out.println(\"\\\"File inesistente o non trovato\\\"\");\r\n        }\r\n    }\r\n*/ //TODO RIVEDERE QUI SOPRA\r\n\r\n    public void registraCentroVaccinale(){\r\n        String nome = nome_centro.getText();\r\n        String qualif = qualificatore.getValue();\r\n        String via = nome_via.getText();\r\n        String civico = numero_civico.getText();\r\n        String com = comune.getText();\r\n        String prov = provincia.getText();\r\n        String Cap = cap.getText();\r\n        if(nome.equals(\"\") || qualif==null || via.equals(\"\")|| civico.equals(\"\")|| com.equals(\"\")|| prov.equals(\"\")|| Cap.equals(\"\")){\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"Errore\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Controllare i dati inseriti\");\r\n            alert.showAndWait();\r\n        }else{\r\n            try{\r\n                File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n                BufferedWriter out = new BufferedWriter(new FileWriter(file,true));\r\n                String output = nome+\";\"+qualif+\";\"+via+\";\"+civico+\";\"+com+\";\"+prov+\";\"+Cap;\r\n                out.write(output);\r\n                out.newLine();\r\n                out.flush();\r\n                out.close();\r\n                Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n                alert.setTitle(\"Successo\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Centro vaccinale registrato\");\r\n                alert.showAndWait();\r\n            }catch (IOException e){\r\n                e.toString();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void stop() throws Exception {\r\n        super.stop();\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String nomeCentroVaccinale)throws FileNotFoundException{ //Ricerca centro per nome, ogni centro che contiene quella \"parte\" di nome, viene visualizzato\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI);\r\n            Scanner reader = new Scanner(file);\r\n            String[] parts;\r\n            while(reader.hasNext()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                if(parts[0].contains(nomeCentroVaccinale)){\r\n                    System.out.println(\"Centri trovati:\"+parts[0]);\r\n                }else{\r\n                    System.out.println(\"Il centro potrebbe non esistere\");\r\n                }\r\n            }\r\n            reader.close();\r\n\r\n        /*parts = line.split(\";\");\r\n        if(parts[0].contains(nomeCentroVaccinale)){\r\n            System.out.println(\"Centro trovato\");\r\n        }else{\r\n            System.out.println(\"Il centro potrebbe non esistere\");\r\n        }\r\n        reader.close();\r\n\r\n         */\r\n        }catch (FileNotFoundException fe) {\r\n            fe.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String comune, String tipologia) throws FileNotFoundException{  //TODO rivedere i tipi dei parametri e try catch\r\n\r\n    }\r\n\r\n    public void visualizzaInfoCentroVaccinale(SingoloCentroVaccinale centroVaccinale){\r\n        System.out.println(centroVaccinale.toString());\r\n\r\n    }\r\n\r\n    public void inserisciEventiAvversi(Object eventoAvverso){  //TODO modificare i parametri\r\n\r\n    }\r\n\r\n    public void onCentriVaccinaliSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"opzioniLoggato.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"opzioniLoggato\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public void onNuovoCentroSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoCentroVaccinale.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo centro vaccinale\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void registraVaccinato(){\r\n        //TODO chiamare questo metodo dopo registrazione (pole deve fare la sua parte)\r\n        String nome = nome_paziente.getText();\r\n        String cognome = cognome_paziente.getText();\r\n        String codice_fiscale =cf_paziente.getText();\r\n        String tipoVaccino = vaccino_somministrato.getValue();\r\n        String centroVaccinale = centro_vaccinale.getValue();\r\n        String id_vaccino = ID_vaccinazione.getText();\r\n        LocalDate dataVaccino = data_vaccinazione.getValue();\r\n        String dataVaccinazione = dataVaccino.format(DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\"));\r\n\r\n\r\n        SingoloCittadino cittadino = new SingoloCittadino(nome,cognome,codice_fiscale);\r\n        cittadino.setCentroVaccinale(centroVaccinale);\r\n        cittadino.setIdVaccino(Integer.parseInt(id_vaccino));\r\n\r\n        int idVaccino = cittadino.getIdVaccino();\r\n\r\n        String output = nome+\";\"+cognome+\";\"+codice_fiscale+\";\"+tipoVaccino+\";\"+idVaccino+\";\"+dataVaccinazione;\r\n        String file_ID = \"data/\"+\"Vaccinati_\"+centroVaccinale+\".dati.txt\";\r\n        try{\r\n            FileWriter writer = new FileWriter(file_ID,true);\r\n            BufferedWriter out = new BufferedWriter(writer);\r\n            out.write(output);\r\n            out.flush();\r\n            out.newLine();\r\n            out.close();\r\n            writer.close();\r\n            Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n            alert.setTitle(\"Successo\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Paziente registrato a sistema\");\r\n            alert.showAndWait();\r\n        }catch (IOException e){\r\n            e.toString();\r\n        }\r\n    }\r\n\r\n\r\n    public void onCittadiniSelected(){\r\n        cittadini=new Cittadini();\r\n        try {\r\n            cittadini.loadUI();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public void onRegisterClicked() throws Exception{ //TODO FAR ANDARE A CAPO QUANDO SCRIVE\r\n        String pwd = user_password.getText();\r\n        String user = user_txtfield.getText();\r\n\r\n        /*Hashing della password per renderla one-way\r\n        MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controlalre che questo controllore sia giusto. sul web dicono che non funzioni correttamente\r\n\r\n        try{\r\n            MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n            byte[] hash = messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8));\r\n            pwd = toHexString(hash);\r\n            System.out.println(pwd);\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        FileWriter writer = new FileWriter(PATH_TO_CITTADINI_REGISTRATI_DATI,true);\r\n        BufferedWriter out = new BufferedWriter(writer);\r\n        String scrivi = user+\";\"+pwd;\r\n        out.write(scrivi);\r\n        out.newLine();\r\n        out.close();\r\n    }\r\n\r\n    private String toHexString(byte[] array) {\r\n        StringBuilder sb = new StringBuilder(array.length * 2);\r\n\r\n        for (byte b : array){\r\n            int value = 0xFF & b;\r\n            String toAppend = Integer.toHexString(value);\r\n\r\n            sb.append(toAppend);\r\n        }\r\n        sb.setLength(sb.length()-1);\r\n        return sb.toString();\r\n    }\r\n\r\n    public void onLoginClicked() {\r\n        String user = user_txtfield.getText();\r\n        String pwd = user_password.getText();\r\n        String user_temp; //questi temp sono i \"candidati\" user e psw presi dal reader dal file\r\n        String pwd_temp;\r\n        String[] parts;//contenitore per il metodo split\r\n\r\n        try {\r\n            if (!user.equals(\"\") && !pwd.equals(\"\")) {\r\n                File file = new File(PATH_TO_CITTADINI_REGISTRATI_DATI);\r\n                Scanner reader = new Scanner(file);\r\n                while (reader.hasNextLine()) {\r\n                    String line = reader.nextLine();\r\n                    parts = line.split(\";\");\r\n                    user_temp = parts[0];\r\n                    pwd_temp = parts[1];\r\n\r\n                    MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n                    pwd_temp = new String(messageDigest.digest(pwd_temp.getBytes(StandardCharsets.UTF_8))); //TODO Rivedere controllore\r\n\r\n                    if (user_temp.equals(user) && pwd_temp.equals(pwd)) {\r\n                        System.out.println(\"LOGGATO\");  //in qualche modo qui caricherà la nuova interface, vai pole divertiti\r\n                    } else {\r\n                        System.out.println(\"User inesistente, premere sul tasto 'register'\");//popup magari (?)\r\n                        /*\r\n                        JOptionPane.showMessageDialog(null,\r\n                            \"User inesistente, premere sul tasto 'register'\",\r\n                            JOptionPane.ERROR_MESSAGE);                           popup?\r\n                        */\r\n                    }\r\n                }\r\n            } else {\r\n                System.out.println(\"Inserire dei dati\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void onNewVaccinate(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoPaziente.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo Paziente\");\r\n\r\n\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n            stage.getIcons().add(image);\r\n            stage.show();\r\n\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void vaccino_somministrato_setter(){\r\n        vaccino_somministrato.setItems(vaccino_somministrato_items);\r\n    }\r\n\r\n    public void qualificatore_setter(){\r\n        qualificatore.setItems(qualificatore_items);\r\n    }\r\n\r\n    public void centro_vaccinale_setter(){\r\n        String[] parts;\r\n        String nome_centro_vaccinale=\"\";\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n            Scanner reader = new Scanner(file);\r\n            while (reader.hasNextLine()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                nome_centro_vaccinale = parts[0];\r\n                if(!centro_vaccinale_items.contains(nome_centro_vaccinale))\r\n                    centro_vaccinale_items.add(nome_centro_vaccinale);\r\n            }\r\n            centro_vaccinale.setItems(centro_vaccinale_items);\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void annulla_button(){\r\n        Stage stage = (Stage)annulla.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n\r\n\r\n    public void onNewVaccinateClicked(){\r\n        onNewVaccinate();\r\n    }\r\n\r\n\r\n\r\n    public static void main(String[] args) throws Exception {\r\n         Application.launch();\r\n\r\n    }\r\n\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/centrivaccinali/CentriVaccinali.java b/src/centrivaccinali/CentriVaccinali.java
+--- a/src/centrivaccinali/CentriVaccinali.java	(revision af9281c71f42809d43599fe6cf9109d976192dec)
++++ b/src/centrivaccinali/CentriVaccinali.java	(date 1629125795497)
+@@ -152,6 +152,7 @@
+         }
+     }
+ 
++
+     @Override
+     public void stop() throws Exception {
+         super.stop();
+Index: data/CentriVaccinali.dati.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>Nome1;via;dio;12;Comune;varese;21055\r\nnome;via;nome;num;com;prov;cap\r\nnome;via;nome;num;com;prov;cap\r\nnome;via;nome;num;com;prov;cap\r\nnomenuovo;via;nuovo;nuovo;nuovo;nuovo;nuovo\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/data/CentriVaccinali.dati.txt b/data/CentriVaccinali.dati.txt
+--- a/data/CentriVaccinali.dati.txt	(revision af9281c71f42809d43599fe6cf9109d976192dec)
++++ b/data/CentriVaccinali.dati.txt	(date 1629125837340)
+@@ -1,5 +1,1 @@
+-Nome1;via;dio;12;Comune;varese;21055
+-nome;via;nome;num;com;prov;cap
+-nome;via;nome;num;com;prov;cap
+-nome;via;nome;num;com;prov;cap
+-nomenuovo;via;nuovo;nuovo;nuovo;nuovo;nuovo
++Nome1;prova;prova
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_55_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_55_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_55_[Default_Changelist]/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_55_[Default_Changelist]/shelved.patch	
@@ -0,0 +1,83 @@
+Index: src/centrivaccinali/CentriVaccinali.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package centrivaccinali;\r\n\r\nimport cittadini.Cittadini;\r\nimport cittadini.SingoloCittadino;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport javafx.application.Application;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.MessageDigest;\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.Scanner;\r\n\r\n//TODO METTERE NOME COGNOME MATRICOLA SEDE\r\npublic class CentriVaccinali extends Application {\r\n    public static final String PATH_TO_CENTRIVACCINALI=\"data/CentriVaccinali.dati.txt\";\r\n    public static final String PATH_TO_CITTADINI_REGISTRATI_DATI=\"data/Cittadini_Registrati.dati.txt\";\r\n    public static final String PATH_TO_DATA=\"data/\";\r\n    public static final String PREFIX = \"Vaccinati_\";\r\n    public static final String SUFFIX = \".dati.txt\";\r\n    private ObservableList<String> vaccino_somministrato_items = FXCollections.observableArrayList(\"Pfizer\",\"AstraZeneca\",\"Moderna\",\"J&J\");\r\n    private ObservableList<String> centro_vaccinale_items = FXCollections.observableArrayList();\r\n    private ObservableList<String> qualificatore_items = FXCollections.observableArrayList(\"via\",\"v.le\",\"pzza\");\r\n    public static final String PATH_TO_CENTRIVACCINALI_DATI = \"data/CentriVaccinali.dati.txt\";\r\n    private Scene scene;\r\n    Cittadini cittadini;\r\n    @FXML\r\n    private TextField user_txtfield;\r\n    @FXML\r\n    private PasswordField user_password;\r\n    @FXML\r\n    private Button btn_cittadini;\r\n    @FXML\r\n    private Button btn_centriVaccinali;\r\n    @FXML\r\n    private javafx.scene.control.TextField nome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cognome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cf_paziente;\r\n    @FXML\r\n    private TextField ID_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> vaccino_somministrato;\r\n    @FXML\r\n    private DatePicker data_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> centro_vaccinale;\r\n    @FXML\r\n    private TextField nome_centro;\r\n    @FXML\r\n    private TextField nome_via;\r\n    @FXML\r\n    private TextField numero_civico;\r\n    @FXML\r\n    private TextField comune;\r\n    @FXML\r\n    private TextField provincia;\r\n    @FXML\r\n    private TextField cap;\r\n    @FXML\r\n    private ChoiceBox<String> qualificatore;\r\n    @FXML\r\n    private Button annulla;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        FXMLLoader loader = new FXMLLoader();\r\n        URL xmlUrl = getClass().getResource(\"SelectionUI.fxml\");\r\n        loader.setLocation(xmlUrl);\r\n\r\n        Parent root = loader.load();\r\n\r\n        Scene scene=new Scene(root);\r\n\r\n\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Pagina iniziale\");\r\n\r\n        InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n        Image image = new Image(icon);\r\n\r\n        stage.getIcons().add(image);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    public void registraCentroVaccinale(){\r\n        String nome = nome_centro.getText();\r\n        String qualif = qualificatore.getValue();\r\n        String via = nome_via.getText();\r\n        String civico = numero_civico.getText();\r\n        String com = comune.getText();\r\n        String prov = provincia.getText();\r\n        String Cap = cap.getText();\r\n        if(nome.equals(\"\") || qualif==null || via.equals(\"\")|| civico.equals(\"\")|| com.equals(\"\")|| prov.equals(\"\")|| Cap.equals(\"\")){\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"Errore\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Controllare i dati inseriti\");\r\n            alert.showAndWait();\r\n        }else{\r\n            try{\r\n                File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n                BufferedWriter out = new BufferedWriter(new FileWriter(file,true));\r\n                String output = nome+\";\"+qualif+\";\"+via+\";\"+civico+\";\"+com+\";\"+prov+\";\"+Cap;\r\n                out.write(output);\r\n                out.newLine();\r\n                out.flush();\r\n                out.close();\r\n                Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n                alert.setTitle(\"Successo\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Centro vaccinale registrato\");\r\n                alert.showAndWait();\r\n            }catch (IOException e){\r\n                e.toString();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void stop() throws Exception {\r\n        super.stop();\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String nomeCentroVaccinale)throws FileNotFoundException{ //Ricerca centro per nome, ogni centro che contiene quella \"parte\" di nome, viene visualizzato\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI);\r\n            Scanner reader = new Scanner(file);\r\n            String[] parts;\r\n            while(reader.hasNext()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                if(parts[0].contains(nomeCentroVaccinale)){\r\n                    System.out.println(\"Centri trovati:\"+parts[0]);\r\n                }else{\r\n                    System.out.println(\"Il centro potrebbe non esistere\");\r\n                }\r\n            }\r\n            reader.close();\r\n\r\n        /*parts = line.split(\";\");\r\n        if(parts[0].contains(nomeCentroVaccinale)){\r\n            System.out.println(\"Centro trovato\");\r\n        }else{\r\n            System.out.println(\"Il centro potrebbe non esistere\");\r\n        }\r\n        reader.close();\r\n\r\n         */\r\n        }catch (FileNotFoundException fe) {\r\n            fe.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String comune, String tipologia) throws FileNotFoundException{  //TODO rivedere i tipi dei parametri e try catch\r\n\r\n    }\r\n\r\n    public void visualizzaInfoCentroVaccinale(SingoloCentroVaccinale centroVaccinale){\r\n        System.out.println(centroVaccinale.toString());\r\n\r\n    }\r\n\r\n    public void inserisciEventiAvversi(Object eventoAvverso){  //TODO modificare i parametri\r\n\r\n    }\r\n\r\n    public void onCentriVaccinaliSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"opzioniLoggato.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"opzioniLoggato\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public void onNuovoCentroSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoCentroVaccinale.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo centro vaccinale\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void registraVaccinato(){\r\n        //TODO chiamare questo metodo dopo registrazione (pole deve fare la sua parte)\r\n        String nome = nome_paziente.getText();\r\n        String cognome = cognome_paziente.getText();\r\n        String codice_fiscale =cf_paziente.getText();\r\n        String tipoVaccino = vaccino_somministrato.getValue();\r\n        String centroVaccinale = centro_vaccinale.getValue();\r\n        String id_vaccino = ID_vaccinazione.getText();\r\n        LocalDate dataVaccino = data_vaccinazione.getValue();\r\n        String dataVaccinazione = dataVaccino.format(DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\"));\r\n\r\n\r\n        SingoloCittadino cittadino = new SingoloCittadino(nome,cognome,codice_fiscale);\r\n        cittadino.setCentroVaccinale(centroVaccinale);\r\n        cittadino.setIdVaccino(Integer.parseInt(id_vaccino));\r\n\r\n        int idVaccino = cittadino.getIdVaccino();\r\n\r\n        String output = nome+\";\"+cognome+\";\"+codice_fiscale+\";\"+tipoVaccino+\";\"+idVaccino+\";\"+dataVaccinazione;\r\n        String file_ID = \"data/\"+\"Vaccinati_\"+centroVaccinale+\".dati.txt\";\r\n        try{\r\n            FileWriter writer = new FileWriter(file_ID,true);\r\n            BufferedWriter out = new BufferedWriter(writer);\r\n            out.write(output);\r\n            out.flush();\r\n            out.newLine();\r\n            out.close();\r\n            writer.close();\r\n            Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n            alert.setTitle(\"Successo\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Paziente registrato a sistema\");\r\n            alert.showAndWait();\r\n        }catch (IOException e){\r\n            e.toString();\r\n        }\r\n    }\r\n\r\n\r\n    public void onCittadiniSelected(){\r\n        cittadini=new Cittadini();\r\n        try {\r\n            cittadini.loadMainCittadiniUI();\r\n            Stage stage=(Stage)btn_cittadini.getScene().getWindow();\r\n            stage.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public void onRegisterClicked() throws Exception{ //TODO FAR ANDARE A CAPO QUANDO SCRIVE\r\n        String pwd = user_password.getText();\r\n        String user = user_txtfield.getText();\r\n\r\n        /*Hashing della password per renderla one-way\r\n        MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controllare che questo controllore sia giusto. sul web dicono che non funzioni correttamente\r\n\r\n        try{\r\n            MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n            byte[] hash = messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8));\r\n            pwd = toHexString(hash);\r\n            System.out.println(pwd);\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        FileWriter writer = new FileWriter(PATH_TO_CITTADINI_REGISTRATI_DATI,true);\r\n        BufferedWriter out = new BufferedWriter(writer);\r\n        String scrivi = user+\";\"+pwd;\r\n        out.write(scrivi);\r\n        out.newLine();\r\n        out.close();\r\n    }\r\n\r\n    private String toHexString(byte[] array) {\r\n        StringBuilder sb = new StringBuilder(array.length * 2);\r\n\r\n        for (byte b : array){\r\n            int value = 0xFF & b;\r\n            String toAppend = Integer.toHexString(value);\r\n\r\n            sb.append(toAppend);\r\n        }\r\n        sb.setLength(sb.length()-1);\r\n        return sb.toString();\r\n    }\r\n\r\n    public void onLoginClicked() {\r\n        String user = user_txtfield.getText();\r\n        String pwd = user_password.getText();\r\n        String user_temp; //questi temp sono i \"candidati\" user e psw presi dal reader dal file\r\n        String pwd_temp;\r\n        String[] parts;//contenitore per il metodo split\r\n\r\n        try {\r\n            if (!user.equals(\"\") && !pwd.equals(\"\")) {\r\n                File file = new File(PATH_TO_CITTADINI_REGISTRATI_DATI);\r\n                Scanner reader = new Scanner(file);\r\n                while (reader.hasNextLine()) {\r\n                    String line = reader.nextLine();\r\n                    parts = line.split(\";\");\r\n                    user_temp = parts[0];\r\n                    pwd_temp = parts[1];\r\n\r\n                    MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n                    pwd_temp = new String(messageDigest.digest(pwd_temp.getBytes(StandardCharsets.UTF_8))); //TODO Rivedere controllore\r\n\r\n                    if (user_temp.equals(user) && pwd_temp.equals(pwd)) {\r\n                        System.out.println(\"LOGGATO\");  //in qualche modo qui caricherà la nuova interface, vai pole divertiti\r\n                    } else {\r\n                        System.out.println(\"User inesistente, premere sul tasto 'register'\");//popup magari (?)\r\n                        /*\r\n                        JOptionPane.showMessageDialog(null,\r\n                            \"User inesistente, premere sul tasto 'register'\",\r\n                            JOptionPane.ERROR_MESSAGE);                           popup?\r\n                        */\r\n                    }\r\n                }\r\n            } else {\r\n                System.out.println(\"Inserire dei dati\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void onNewVaccinate(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoPaziente.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo Paziente\");\r\n\r\n\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n            stage.getIcons().add(image);\r\n            stage.show();\r\n\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void vaccino_somministrato_setter(){\r\n        vaccino_somministrato.setItems(vaccino_somministrato_items);\r\n    }\r\n\r\n    public void qualificatore_setter(){\r\n        qualificatore.setItems(qualificatore_items);\r\n    }\r\n\r\n    public void centro_vaccinale_setter(){\r\n        String[] parts;\r\n        String nome_centro_vaccinale=\"\";\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n            Scanner reader = new Scanner(file);\r\n            while (reader.hasNextLine()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                nome_centro_vaccinale = parts[0];\r\n                if(!centro_vaccinale_items.contains(nome_centro_vaccinale))\r\n                    centro_vaccinale_items.add(nome_centro_vaccinale);\r\n            }\r\n            centro_vaccinale.setItems(centro_vaccinale_items);\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void annulla_button(){\r\n        Stage stage = (Stage)annulla.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n\r\n\r\n    public void onNewVaccinateClicked(){\r\n        onNewVaccinate();\r\n    }\r\n\r\n\r\n\r\n    public static void main(String[] args) throws Exception {\r\n         Application.launch();\r\n\r\n    }\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/centrivaccinali/CentriVaccinali.java b/src/centrivaccinali/CentriVaccinali.java
+--- a/src/centrivaccinali/CentriVaccinali.java	(revision 0fbdb4e7ef30bc14120f63b04e961371a044c279)
++++ b/src/centrivaccinali/CentriVaccinali.java	(date 1629125751047)
+@@ -132,6 +132,72 @@
+         }
+     }
+ 
++    public void onNuovoCentroSelected(){
++        try {
++            FXMLLoader loader = new FXMLLoader();
++            URL xmlUrl = getClass().getResource("nuovoCentroVaccinale.fxml");
++            loader.setLocation(xmlUrl);
++
++            Parent root = loader.load();
++
++            scene = new Scene(root);
++
++            Stage stage = new Stage();
++            stage.setScene(scene);
++            stage.setTitle("Nuovo centro vaccinale");
++
++            InputStream icon = getClass().getResourceAsStream("fiorellino.png");
++            Image image = new Image(icon);
++
++            stage.getIcons().add(image);
++
++            stage.show();
++        }
++        catch (IOException e){
++            e.printStackTrace();
++        }
++
++    }
++
++    public void registraVaccinato(){
++        //TODO chiamare questo metodo dopo registrazione (pole deve fare la sua parte)
++        String nome = nome_paziente.getText();
++        String cognome = cognome_paziente.getText();
++        String codice_fiscale =cf_paziente.getText();
++        String tipoVaccino = vaccino_somministrato.getValue();
++        String centroVaccinale = centro_vaccinale.getValue();
++        String id_vaccino = ID_vaccinazione.getText();
++        LocalDate dataVaccino = data_vaccinazione.getValue();
++        String dataVaccinazione = dataVaccino.format(DateTimeFormatter.ofPattern("MMM-dd-yyyy"));
++
++
++        SingoloCittadino cittadino = new SingoloCittadino(nome,cognome,codice_fiscale);
++        cittadino.setCentroVaccinale(centroVaccinale);
++        cittadino.setIdVaccino(Integer.parseInt(id_vaccino));
++
++        int idVaccino = cittadino.getIdVaccino();
++
++        String output = nome+";"+cognome+";"+codice_fiscale+";"+tipoVaccino+";"+idVaccino+";"+dataVaccinazione;
++        String file_ID = "data/"+"Vaccinati_"+centroVaccinale+".dati.txt";
++        try{
++            FileWriter writer = new FileWriter(file_ID,true);
++            BufferedWriter out = new BufferedWriter(writer);
++            out.write(output);
++            out.flush();
++            out.newLine();
++            out.close();
++            writer.close();
++            Alert alert = new Alert(Alert.AlertType.INFORMATION);
++            alert.setTitle("Successo");
++            alert.setHeaderText(null);
++            alert.setContentText("Paziente registrato a sistema");
++            alert.showAndWait();
++        }catch (IOException e){
++            e.toString();
++        }
++    }
++
++
+     @Override
+     public void stop() throws Exception {
+         super.stop();
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n.idea/libraries/lib.xml\r\nProgettoLaboratorio.iml\r\nProgettoLaboratorio.iml\r\n.idea/dataSources.local.xml\r\n.idea/shelf/Uncommitted_changes_before_Checkout_at_19_05_2021_16_53_[Default_Changelist]/CentriVaccinali.class\r\n.idea/shelf/Uncommitted_changes_before_Checkout_at_19_05_2021_16_53_[Default_Changelist]/shelved.patch\r\n.idea/shelf/Uncommitted_changes_before_Checkout_at_19_05_2021_16_53_[Default_Changelist]/SingoloCentroVaccinale.class\r\n.idea/shelf/Uncommitted_changes_before_Checkout_at_19_05_2021_16_53__Default_Changelist_.xml\r\n.idea/shelf/Uncommitted_changes_before_Checkout_at_19_05_2021_16_54_[Default_Changelist]/shelved.patch\r\n.idea/shelf/Uncommitted_changes_before_Checkout_at_19_05_2021_16_54_[Default_Changelist]/SingoloCentroVaccinale.class\r\n.idea/shelf/Uncommitted_changes_before_Checkout_at_19_05_2021_16_54__Default_Changelist_.xml\r\n*.xml\r\n*.class\r\n*.class\r\n*.class\r\n\r\n*.class\r\n.idea/shelf/Uncommitted_changes_before_Merge_at_18_05_2021_20_55_[Default_Changelist]/shelved.patch\r\n.idea/shelf/Uncommitted_changes_before_Merge_at_18_05_2021_20_55__Default_Changelist_.xml\r\n*.class\r\n*.class\r\n*.class\r\n*.class\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	
+++ b/.gitignore	
@@ -22,3 +22,4 @@
 *.class
 *.class
 *.class
+*.class
Index: bin/production/ProgettoLaboratorio/centrivaccinali/nuovoPaziente.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.paint.*?>\r\n<?import javafx.scene.shape.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane prefHeight=\"700.0\" prefWidth=\"550.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"centrivaccinali.CentriVaccinaliUI\">\r\n   <children>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" height=\"700.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"550.0\">\r\n         <fill>\r\n            <RadialGradient centerX=\"0.5\" centerY=\"0.5\" cycleMethod=\"REFLECT\" radius=\"0.5\">\r\n               <stops>\r\n                  <Stop>\r\n                     <color>\r\n                        <Color />\r\n                     </color>\r\n                  </Stop>\r\n                  <Stop offset=\"1.0\">\r\n                     <color>\r\n                        <Color red=\"0.09803921729326248\" green=\"0.4901960790157318\" blue=\"0.7882353067398071\" />\r\n                     </color>\r\n                  </Stop>\r\n               </stops>\r\n            </RadialGradient>\r\n         </fill></Rectangle>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"#91ceff\" height=\"660.0\" layoutX=\"15.0\" layoutY=\"20.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"520.0\" />\r\n      <ChoiceBox fx:id=\"vaccino_somministrato\" layoutX=\"50.0\" layoutY=\"425.0\" onMousePressed=\"#vaccino_somministrato_setter\" prefWidth=\"180.0\" />\r\n      <TextField fx:id=\"nome_paziente\" layoutX=\"50.0\" layoutY=\"195.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <TextField fx:id=\"cognome_paziente\" layoutX=\"324.0\" layoutY=\"195.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <TextField fx:id=\"cf_paziente\" layoutX=\"50.0\" layoutY=\"310.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <TextField fx:id=\"ID_vaccinazione\" layoutX=\"324.0\" layoutY=\"310.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <Label layoutX=\"81.0\" layoutY=\"150.0\" prefHeight=\"22.0\" prefWidth=\"119.0\" text=\"Nome Paziente\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"338.0\" layoutY=\"150.0\" prefHeight=\"22.0\" prefWidth=\"152.0\" text=\"Cognome Paziente\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"350.0\" layoutY=\"265.0\" prefHeight=\"22.0\" prefWidth=\"128.0\" text=\"ID Vaccinazione\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"81.0\" layoutY=\"265.0\" prefHeight=\"22.0\" prefWidth=\"119.0\" text=\"Codice Fiscale\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"50.0\" layoutY=\"380.0\" prefHeight=\"22.0\" prefWidth=\"180.0\" text=\"Vaccino Somministrato\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"341.0\" layoutY=\"380.0\" prefHeight=\"22.0\" prefWidth=\"146.0\" text=\"Data Vaccinazione\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <ChoiceBox fx:id=\"centro_vaccinale\" layoutX=\"50.0\" layoutY=\"540.0\" onMousePressed=\"#centro_vaccinale_setter\" prefHeight=\"25.0\" prefWidth=\"282.0\" />\r\n      <Label layoutX=\"124.0\" layoutY=\"495.0\" prefHeight=\"22.0\" prefWidth=\"152.0\" text=\"Centro Vaccinale\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Button fx:id=\"nuovoPaziente_confirm\" layoutX=\"395.0\" layoutY=\"605.0\" mnemonicParsing=\"false\" onAction=\"#registraVaccinato\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"Conferma\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font></Button>\r\n      <Button layoutX=\"270.0\" layoutY=\"605.0\" mnemonicParsing=\"false\" prefHeight=\"42.0\" prefWidth=\"109.0\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"Annulla\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <DatePicker fx:id=\"data_vaccinazione\" layoutX=\"317.0\" layoutY=\"425.0\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bin/production/ProgettoLaboratorio/centrivaccinali/nuovoPaziente.fxml b/bin/production/ProgettoLaboratorio/centrivaccinali/nuovoPaziente.fxml
--- a/bin/production/ProgettoLaboratorio/centrivaccinali/nuovoPaziente.fxml	
+++ b/bin/production/ProgettoLaboratorio/centrivaccinali/nuovoPaziente.fxml	
@@ -6,7 +6,7 @@
 <?import javafx.scene.shape.*?>
 <?import javafx.scene.text.*?>
 
-<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.CentriVaccinaliUI">
+<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.CentriVaccinali">
    <children>
       <Rectangle arcHeight="5.0" arcWidth="5.0" height="700.0" stroke="BLACK" strokeType="INSIDE" width="550.0">
          <fill>
@@ -71,7 +71,7 @@
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font></Button>
-      <Button layoutX="270.0" layoutY="605.0" mnemonicParsing="false" prefHeight="42.0" prefWidth="109.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="Annulla">
+      <Button fx:id="annulla" layoutX="270.0" layoutY="605.0" mnemonicParsing="false" onAction="#annulla_button" prefHeight="42.0" prefWidth="109.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="Annulla">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
Index: bin/production/ProgettoLaboratorio/centrivaccinali/opzioniLoggato.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.paint.*?>\r\n<?import javafx.scene.shape.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane prefHeight=\"700.0\" prefWidth=\"550.0\">\r\n   <children>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" height=\"700.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"550.0\">\r\n         <fill>\r\n            <RadialGradient centerX=\"0.5\" centerY=\"0.5\" cycleMethod=\"REFLECT\" radius=\"0.74\">\r\n               <stops>\r\n                  <Stop>\r\n                     <color>\r\n                        <Color />\r\n                     </color>\r\n                  </Stop>\r\n                  <Stop offset=\"1.0\">\r\n                     <color>\r\n                        <Color red=\"0.09803921729326248\" green=\"0.4901960790157318\" blue=\"0.7882353067398071\" />\r\n                     </color>\r\n                  </Stop>\r\n               </stops>\r\n            </RadialGradient>\r\n         </fill></Rectangle>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"#91ceff\" height=\"660.0\" layoutX=\"15.0\" layoutY=\"20.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"520.0\" />\r\n      <Button layoutX=\"70.0\" layoutY=\"450.0\" mnemonicParsing=\"false\" prefHeight=\"50.0\" prefWidth=\"150.0\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"N. Vaccinato\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font></Button>\r\n      <Button layoutX=\"330.0\" layoutY=\"450.0\" mnemonicParsing=\"false\" prefHeight=\"50.0\" prefWidth=\"150.0\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"N. Centro\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <ImageView fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"314.0\" layoutY=\"212.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n         <image>\r\n            <Image url=\"@ospedale.png\" />\r\n         </image>\r\n      </ImageView>\r\n      <ImageView fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"70.0\" layoutY=\"212.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n         <image>\r\n            <Image url=\"@siringa.png\" />\r\n         </image></ImageView>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bin/production/ProgettoLaboratorio/centrivaccinali/opzioniLoggato.fxml b/bin/production/ProgettoLaboratorio/centrivaccinali/opzioniLoggato.fxml
--- a/bin/production/ProgettoLaboratorio/centrivaccinali/opzioniLoggato.fxml	
+++ b/bin/production/ProgettoLaboratorio/centrivaccinali/opzioniLoggato.fxml	
@@ -7,7 +7,7 @@
 <?import javafx.scene.shape.*?>
 <?import javafx.scene.text.*?>
 
-<AnchorPane prefHeight="700.0" prefWidth="550.0">
+<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.CentriVaccinali">
    <children>
       <Rectangle arcHeight="5.0" arcWidth="5.0" height="700.0" stroke="BLACK" strokeType="INSIDE" width="550.0">
          <fill>
@@ -27,11 +27,11 @@
             </RadialGradient>
          </fill></Rectangle>
       <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#91ceff" height="660.0" layoutX="15.0" layoutY="20.0" stroke="BLACK" strokeType="INSIDE" width="520.0" />
-      <Button layoutX="70.0" layoutY="450.0" mnemonicParsing="false" prefHeight="50.0" prefWidth="150.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="N. Vaccinato">
+      <Button fx:id="nuovo_vaccinato" layoutX="70.0" layoutY="450.0" mnemonicParsing="false" onAction="#onNewVaccinateClicked" prefHeight="50.0" prefWidth="150.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="N. Vaccinato">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font></Button>
-      <Button layoutX="330.0" layoutY="450.0" mnemonicParsing="false" prefHeight="50.0" prefWidth="150.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="N. Centro">
+      <Button fx:id="nuovo_centro_ui" layoutX="330.0" layoutY="450.0" mnemonicParsing="false" onAction="#onNuovoCentroSelected" prefHeight="50.0" prefWidth="150.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="N. Centro">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
Index: src/centrivaccinali/nuovoCentroVaccinale.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/centrivaccinali/nuovoCentroVaccinale.fxml b/src/centrivaccinali/nuovoCentroVaccinale.fxml
new file mode 100644
--- /dev/null	
+++ b/src/centrivaccinali/nuovoCentroVaccinale.fxml	
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+
+<AnchorPane prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.CentriVaccinali">
+   <children>
+      <Label layoutX="27.0" layoutY="34.0" text="Nome " />
+      <TextField fx:id="nome_centro" layoutX="27.0" layoutY="66.0" />
+      <Button fx:id="registra_centro_vaccinale" layoutX="509.0" layoutY="346.0" mnemonicParsing="false" onAction="#registraCentroVaccinale" text="Registra" />
+      <ChoiceBox fx:id="qualificatore" layoutX="275.0" layoutY="66.0" onMousePressed="#qualificatore_setter" prefHeight="25.0" prefWidth="42.0" />
+      <TextField fx:id="nome_via" layoutX="335.0" layoutY="66.0" prefHeight="25.0" prefWidth="59.0" />
+      <TextField fx:id="numero_civico" layoutX="405.0" layoutY="66.0" prefHeight="25.0" prefWidth="59.0" />
+      <TextField fx:id="comune" layoutX="335.0" layoutY="129.0" prefHeight="25.0" prefWidth="59.0" />
+      <TextField fx:id="provincia" layoutX="405.0" layoutY="129.0" prefHeight="25.0" prefWidth="59.0" />
+      <TextField fx:id="cap" layoutX="335.0" layoutY="188.0" prefHeight="25.0" prefWidth="59.0" />
+      <Label layoutX="249.0" layoutY="43.0" text="Qualificatore" />
+      <Label layoutX="351.0" layoutY="43.0" text="Nome" />
+      <Label layoutX="413.0" layoutY="43.0" text="Numero civico" />
+      <Label layoutX="342.0" layoutY="105.0" text="Comune" />
+      <Label layoutX="413.0" layoutY="105.0" text="Provincia (sigla)" />
+      <Label layoutX="351.0" layoutY="165.0" text="CAP" />
+      <Button fx:id="annulla" layoutX="435.0" layoutY="346.0" mnemonicParsing="false" onAction="#annulla_button" text="Annulla" />
+   </children>
+</AnchorPane>
Index: src/cittadini/visualizzazioneCentroVaccinale.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/cittadini/visualizzazioneCentroVaccinale.fxml b/src/cittadini/visualizzazioneCentroVaccinale.fxml
new file mode 100644
--- /dev/null	
+++ b/src/cittadini/visualizzazioneCentroVaccinale.fxml	
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+<?import javafx.scene.text.*?>
+
+<AnchorPane prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="cittadini.Cittadini">
+   <children>
+      <Label fx:id="lblEffect1" layoutX="63.0" layoutY="68.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Mal di testa" />
+      <Label fx:id="lblEffect2" layoutX="63.0" layoutY="118.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Febbre" />
+      <Label fx:id="lblEffect3" layoutX="63.0" layoutY="169.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Dolori muscolari o articolari" />
+      <Label fx:id="lblEffect4" layoutX="63.0" layoutY="221.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Linfoadenopatia" />
+      <Label fx:id="lblEffect5" layoutX="63.0" layoutY="271.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Tachicardia" />
+      <Label fx:id="lblEffect6" layoutX="63.0" layoutY="321.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Crisi ipertensiva" />
+      <Label fx:id="lbl_effect1" alignment="CENTER" layoutX="197.0" layoutY="68.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0" textAlignment="CENTER">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect2" alignment="CENTER" layoutX="197.0" layoutY="118.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect3" alignment="CENTER" layoutX="197.0" layoutY="169.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect4" alignment="CENTER" layoutX="197.0" layoutY="221.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect5" alignment="CENTER" layoutX="197.0" layoutY="271.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect6" alignment="CENTER" layoutX="197.0" layoutY="321.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Button layoutX="410.0" layoutY="14.0" mnemonicParsing="false" onAction="#checkLogin" prefHeight="32.0" prefWidth="162.0" text="Inserisci Evento Avverso" />
+      <Label fx:id="lbl_highlitedCentreName" layoutX="14.0" layoutY="14.0" prefHeight="32.0" prefWidth="103.0" style="-fx-border-color: black;" />
+      <Label fx:id="lbl_highlitedCentreAddress" layoutX="122.0" layoutY="14.0" prefHeight="32.0" prefWidth="135.0" style="-fx-border-color: black;" />
+      <Label fx:id="lbl_highlitedCentreType" layoutX="272.0" layoutY="14.0" prefHeight="32.0" prefWidth="84.0" style="-fx-border-color: black;" />
+   </children>
+</AnchorPane>
Index: src/cittadini/registraEventiAvversi.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.paint.*?>\r\n<?import javafx.scene.shape.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane prefHeight=\"700.0\" prefWidth=\"550.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"centrivaccinali.NuovoCittadino\">\r\n   <children>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" height=\"700.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"550.0\">\r\n         <fill>\r\n            <RadialGradient centerX=\"0.5\" centerY=\"0.5\" cycleMethod=\"REFLECT\" radius=\"0.5\">\r\n               <stops>\r\n                  <Stop>\r\n                     <color>\r\n                        <Color />\r\n                     </color>\r\n                  </Stop>\r\n                  <Stop offset=\"1.0\">\r\n                     <color>\r\n                        <Color red=\"0.09803921729326248\" green=\"0.4901960790157318\" blue=\"0.7882353067398071\" />\r\n                     </color>\r\n                  </Stop>\r\n               </stops>\r\n            </RadialGradient>\r\n         </fill></Rectangle>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"#91ceff\" height=\"660.0\" layoutX=\"15.0\" layoutY=\"20.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"520.0\" />\r\n      <TextField layoutX=\"95.0\" layoutY=\"500.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <Spinner id=\"box1\" editable=\"true\" layoutX=\"365.0\" layoutY=\"150.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Spinner id=\"box2\" layoutX=\"365.0\" layoutY=\"200.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Spinner id=\"box3\" layoutX=\"365.0\" layoutY=\"250.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Label layoutX=\"95.0\" layoutY=\"150.0\" prefHeight=\"22.0\" prefWidth=\"109.0\" text=\"Mal di testa:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"95.0\" layoutY=\"200.0\" prefHeight=\"22.0\" prefWidth=\"70.0\" text=\"Febbre:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"95.0\" layoutY=\"250.0\" prefHeight=\"22.0\" prefWidth=\"228.0\" text=\"Dolori muscolari o articolari:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"83.0\" layoutY=\"68.0\" prefHeight=\"67.0\" prefWidth=\"384.0\" text=\"Per ogni sintomo se riscontrato inserire un valore da 1 a 5 che rappresenti l'intensità del sintomo:\" wrapText=\"true\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"95.0\" layoutY=\"300.0\" prefHeight=\"22.0\" prefWidth=\"145.0\" text=\"Linfoadenopatia:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Button layoutX=\"395.0\" layoutY=\"605.0\" mnemonicParsing=\"false\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"Conferma\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font></Button>\r\n      <Button layoutX=\"270.0\" layoutY=\"605.0\" mnemonicParsing=\"false\" prefHeight=\"42.0\" prefWidth=\"109.0\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"Annulla\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <Spinner id=\"box4\" layoutX=\"365.0\" layoutY=\"300.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Label layoutX=\"95.0\" layoutY=\"350.0\" prefHeight=\"22.0\" prefWidth=\"109.0\" text=\"Tachicardia:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Spinner id=\"box5\" layoutX=\"365.0\" layoutY=\"350.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Label layoutX=\"95.0\" layoutY=\"400.0\" prefHeight=\"22.0\" prefWidth=\"145.0\" text=\"Crisi ipertensiva:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Spinner id=\"box6\" layoutX=\"365.0\" layoutY=\"400.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Spinner layoutX=\"365.0\" layoutY=\"550.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <TextField layoutX=\"95.0\" layoutY=\"550.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <Spinner layoutX=\"365.0\" layoutY=\"500.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Label layoutX=\"95.0\" layoutY=\"450.0\" prefHeight=\"22.0\" prefWidth=\"298.0\" text=\"Altri sintomi (massimo 256 caratteri):\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/cittadini/registraEventiAvversi.fxml b/src/cittadini/registraEventiAvversi.fxml
--- a/src/cittadini/registraEventiAvversi.fxml	
+++ b/src/cittadini/registraEventiAvversi.fxml	
@@ -6,7 +6,7 @@
 <?import javafx.scene.shape.*?>
 <?import javafx.scene.text.*?>
 
-<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.NuovoCittadino">
+<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="cittadini.Cittadini">
    <children>
       <Rectangle arcHeight="5.0" arcWidth="5.0" height="700.0" stroke="BLACK" strokeType="INSIDE" width="550.0">
          <fill>
@@ -26,10 +26,10 @@
             </RadialGradient>
          </fill></Rectangle>
       <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#91ceff" height="660.0" layoutX="15.0" layoutY="20.0" stroke="BLACK" strokeType="INSIDE" width="520.0" />
-      <TextField layoutX="95.0" layoutY="500.0" prefHeight="25.0" prefWidth="180.0" />
-      <Spinner id="box1" editable="true" layoutX="365.0" layoutY="150.0" prefHeight="25.0" prefWidth="55.0" />
-      <Spinner id="box2" layoutX="365.0" layoutY="200.0" prefHeight="25.0" prefWidth="55.0" />
-      <Spinner id="box3" layoutX="365.0" layoutY="250.0" prefHeight="25.0" prefWidth="55.0" />
+      <TextField fx:id="txt_other1" layoutX="95.0" layoutY="500.0" prefHeight="25.0" prefWidth="180.0" />
+      <Spinner id="box1" fx:id="spn_headache" editable="true" layoutX="365.0" layoutY="150.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box2" fx:id="spn_fever" layoutX="365.0" layoutY="200.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box3" fx:id="spn_hurt" layoutX="365.0" layoutY="250.0" prefHeight="25.0" prefWidth="55.0" />
       <Label layoutX="95.0" layoutY="150.0" prefHeight="22.0" prefWidth="109.0" text="Mal di testa:">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
@@ -55,7 +55,7 @@
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
       </Label>
-      <Button layoutX="395.0" layoutY="605.0" mnemonicParsing="false" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="Conferma">
+      <Button layoutX="395.0" layoutY="605.0" mnemonicParsing="false" onAction="#registerEventiAvversi" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="Conferma">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font></Button>
@@ -64,22 +64,22 @@
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
       </Button>
-      <Spinner id="box4" layoutX="365.0" layoutY="300.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box4" fx:id="spn_linf" layoutX="365.0" layoutY="300.0" prefHeight="25.0" prefWidth="55.0" />
       <Label layoutX="95.0" layoutY="350.0" prefHeight="22.0" prefWidth="109.0" text="Tachicardia:">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
       </Label>
-      <Spinner id="box5" layoutX="365.0" layoutY="350.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box5" fx:id="spn_tac" layoutX="365.0" layoutY="350.0" prefHeight="25.0" prefWidth="55.0" />
       <Label layoutX="95.0" layoutY="400.0" prefHeight="22.0" prefWidth="145.0" text="Crisi ipertensiva:">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
       </Label>
-      <Spinner id="box6" layoutX="365.0" layoutY="400.0" prefHeight="25.0" prefWidth="55.0" />
-      <Spinner layoutX="365.0" layoutY="550.0" prefHeight="25.0" prefWidth="55.0" />
-      <TextField layoutX="95.0" layoutY="550.0" prefHeight="25.0" prefWidth="180.0" />
-      <Spinner layoutX="365.0" layoutY="500.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box6" fx:id="spn_crs" layoutX="365.0" layoutY="400.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner fx:id="spn_other2" layoutX="365.0" layoutY="550.0" prefHeight="25.0" prefWidth="55.0" />
+      <TextField fx:id="txt_other2" layoutX="95.0" layoutY="550.0" prefHeight="25.0" prefWidth="180.0" />
+      <Spinner fx:id="spn_other1" layoutX="365.0" layoutY="500.0" prefHeight="25.0" prefWidth="55.0" />
       <Label layoutX="95.0" layoutY="450.0" prefHeight="22.0" prefWidth="298.0" text="Altri sintomi (massimo 256 caratteri):">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
Index: bin/production/ProgettoLaboratorio/cittadini/visualizzazioneCentroVaccinale.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bin/production/ProgettoLaboratorio/cittadini/visualizzazioneCentroVaccinale.fxml b/bin/production/ProgettoLaboratorio/cittadini/visualizzazioneCentroVaccinale.fxml
new file mode 100644
--- /dev/null	
+++ b/bin/production/ProgettoLaboratorio/cittadini/visualizzazioneCentroVaccinale.fxml	
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+<?import javafx.scene.text.*?>
+
+<AnchorPane prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="cittadini.Cittadini">
+   <children>
+      <Label fx:id="lblEffect1" layoutX="63.0" layoutY="68.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Mal di testa" />
+      <Label fx:id="lblEffect2" layoutX="63.0" layoutY="118.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Febbre" />
+      <Label fx:id="lblEffect3" layoutX="63.0" layoutY="169.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Dolori muscolari o articolari" />
+      <Label fx:id="lblEffect4" layoutX="63.0" layoutY="221.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Linfoadenopatia" />
+      <Label fx:id="lblEffect5" layoutX="63.0" layoutY="271.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Tachicardia" />
+      <Label fx:id="lblEffect6" layoutX="63.0" layoutY="321.0" prefHeight="38.0" prefWidth="103.0" style="-fx-border-color: black;" text="Crisi ipertensiva" />
+      <Label fx:id="lbl_effect1" alignment="CENTER" layoutX="197.0" layoutY="68.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0" textAlignment="CENTER">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect2" alignment="CENTER" layoutX="197.0" layoutY="118.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect3" alignment="CENTER" layoutX="197.0" layoutY="169.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect4" alignment="CENTER" layoutX="197.0" layoutY="221.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect5" alignment="CENTER" layoutX="197.0" layoutY="271.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Label fx:id="lbl_effect6" alignment="CENTER" layoutX="197.0" layoutY="321.0" prefHeight="38.0" prefWidth="58.0" style="-fx-border-color: black;" text="0">
+         <font>
+            <Font size="18.0" />
+         </font></Label>
+      <Button layoutX="410.0" layoutY="14.0" mnemonicParsing="false" onAction="#checkLogin" prefHeight="32.0" prefWidth="162.0" text="Inserisci Evento Avverso" />
+      <Label fx:id="lbl_highlitedCentreName" layoutX="14.0" layoutY="14.0" prefHeight="32.0" prefWidth="103.0" style="-fx-border-color: black;" />
+      <Label fx:id="lbl_highlitedCentreAddress" layoutX="122.0" layoutY="14.0" prefHeight="32.0" prefWidth="135.0" style="-fx-border-color: black;" />
+      <Label fx:id="lbl_highlitedCentreType" layoutX="272.0" layoutY="14.0" prefHeight="32.0" prefWidth="84.0" style="-fx-border-color: black;" />
+   </children>
+</AnchorPane>
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_52_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_52_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_52_[Default_Changelist]/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_52_[Default_Changelist]/shelved.patch	
@@ -0,0 +1,26 @@
+Index: src/centrivaccinali/CentriVaccinali.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package centrivaccinali;\r\n\r\nimport cittadini.Cittadini;\r\nimport cittadini.SingoloCittadino;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport javafx.application.Application;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.MessageDigest;\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.Scanner;\r\n\r\n//TODO METTERE NOME COGNOME MATRICOLA SEDE\r\npublic class CentriVaccinali extends Application {\r\n    public static final String PATH_TO_CENTRIVACCINALI=\"data/CentriVaccinali.dati.txt\";\r\n    public static final String PATH_TO_CITTADINI_REGISTRATI_DATI=\"data/Cittadini_Registrati.dati.txt\";\r\n    public static final String PATH_TO_DATA=\"data/\";\r\n    public static final String PREFIX = \"Vaccinati_\";\r\n    public static final String SUFFIX = \".dati.txt\";\r\n    private ObservableList<String> vaccino_somministrato_items = FXCollections.observableArrayList(\"Pfizer\",\"AstraZeneca\",\"Moderna\",\"J&J\");\r\n    private ObservableList<String> centro_vaccinale_items = FXCollections.observableArrayList();\r\n    private ObservableList<String> qualificatore_items = FXCollections.observableArrayList(\"via\",\"v.le\",\"pzza\");\r\n    public static final String PATH_TO_CENTRIVACCINALI_DATI = \"data/CentriVaccinali.dati.txt\";\r\n    private Scene scene;\r\n    Cittadini cittadini;\r\n    @FXML\r\n    private TextField user_txtfield;\r\n    @FXML\r\n    private PasswordField user_password;\r\n    @FXML\r\n    private Button btn_cittadini;\r\n    @FXML\r\n    private Button btn_centriVaccinali;\r\n    @FXML\r\n    private javafx.scene.control.TextField nome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cognome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cf_paziente;\r\n    @FXML\r\n    private TextField ID_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> vaccino_somministrato;\r\n    @FXML\r\n    private DatePicker data_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> centro_vaccinale;\r\n    @FXML\r\n    private TextField nome_centro;\r\n    @FXML\r\n    private TextField nome_via;\r\n    @FXML\r\n    private TextField numero_civico;\r\n    @FXML\r\n    private TextField comune;\r\n    @FXML\r\n    private TextField provincia;\r\n    @FXML\r\n    private TextField cap;\r\n    @FXML\r\n    private ChoiceBox<String> qualificatore;\r\n    @FXML\r\n    private Button annulla;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        FXMLLoader loader = new FXMLLoader();\r\n        URL xmlUrl = getClass().getResource(\"SelectionUI.fxml\");\r\n        loader.setLocation(xmlUrl);\r\n\r\n        Parent root = loader.load();\r\n\r\n        Scene scene=new Scene(root);\r\n\r\n\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Pagina iniziale\");\r\n\r\n        InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n        Image image = new Image(icon);\r\n\r\n        stage.getIcons().add(image);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    public void registraCentroVaccinale(){\r\n        String nome = nome_centro.getText();\r\n        String qualif = qualificatore.getValue();\r\n        String via = nome_via.getText();\r\n        String civico = numero_civico.getText();\r\n        String com = comune.getText();\r\n        String prov = provincia.getText();\r\n        String Cap = cap.getText();\r\n        if(nome.equals(\"\") || qualif==null || via.equals(\"\")|| civico.equals(\"\")|| com.equals(\"\")|| prov.equals(\"\")|| Cap.equals(\"\")){\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"Errore\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Controllare i dati inseriti\");\r\n            alert.showAndWait();\r\n        }else{\r\n            try{\r\n                File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n                BufferedWriter out = new BufferedWriter(new FileWriter(file,true));\r\n                String output = nome+\";\"+qualif+\";\"+via+\";\"+civico+\";\"+com+\";\"+prov+\";\"+Cap;\r\n                out.write(output);\r\n                out.newLine();\r\n                out.flush();\r\n                out.close();\r\n                Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n                alert.setTitle(\"Successo\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Centro vaccinale registrato\");\r\n                alert.showAndWait();\r\n            }catch (IOException e){\r\n                e.toString();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void stop() throws Exception {\r\n        super.stop();\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String nomeCentroVaccinale)throws FileNotFoundException{ //Ricerca centro per nome, ogni centro che contiene quella \"parte\" di nome, viene visualizzato\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI);\r\n            Scanner reader = new Scanner(file);\r\n            String[] parts;\r\n            while(reader.hasNext()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                if(parts[0].contains(nomeCentroVaccinale)){\r\n                    System.out.println(\"Centri trovati:\"+parts[0]);\r\n                }else{\r\n                    System.out.println(\"Il centro potrebbe non esistere\");\r\n                }\r\n            }\r\n            reader.close();\r\n\r\n        /*parts = line.split(\";\");\r\n        if(parts[0].contains(nomeCentroVaccinale)){\r\n            System.out.println(\"Centro trovato\");\r\n        }else{\r\n            System.out.println(\"Il centro potrebbe non esistere\");\r\n        }\r\n        reader.close();\r\n\r\n         */\r\n        }catch (FileNotFoundException fe) {\r\n            fe.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String comune, String tipologia) throws FileNotFoundException{  //TODO rivedere i tipi dei parametri e try catch\r\n\r\n    }\r\n\r\n    public void visualizzaInfoCentroVaccinale(SingoloCentroVaccinale centroVaccinale){\r\n        System.out.println(centroVaccinale.toString());\r\n\r\n    }\r\n\r\n    public void inserisciEventiAvversi(Object eventoAvverso){  //TODO modificare i parametri\r\n\r\n    }\r\n\r\n    public void onCentriVaccinaliSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"opzioniLoggato.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"opzioniLoggato\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public void onNuovoCentroSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoCentroVaccinale.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo centro vaccinale\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void registraVaccinato(){\r\n        //TODO chiamare questo metodo dopo registrazione (pole deve fare la sua parte)\r\n        String nome = nome_paziente.getText();\r\n        String cognome = cognome_paziente.getText();\r\n        String codice_fiscale =cf_paziente.getText();\r\n        String tipoVaccino = vaccino_somministrato.getValue();\r\n        String centroVaccinale = centro_vaccinale.getValue();\r\n        String id_vaccino = ID_vaccinazione.getText();\r\n        LocalDate dataVaccino = data_vaccinazione.getValue();\r\n        String dataVaccinazione = dataVaccino.format(DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\"));\r\n\r\n\r\n        SingoloCittadino cittadino = new SingoloCittadino(nome,cognome,codice_fiscale);\r\n        cittadino.setCentroVaccinale(centroVaccinale);\r\n        cittadino.setIdVaccino(Integer.parseInt(id_vaccino));\r\n\r\n        int idVaccino = cittadino.getIdVaccino();\r\n\r\n        String output = nome+\";\"+cognome+\";\"+codice_fiscale+\";\"+tipoVaccino+\";\"+idVaccino+\";\"+dataVaccinazione;\r\n        String file_ID = \"data/\"+\"Vaccinati_\"+centroVaccinale+\".dati.txt\";\r\n        try{\r\n            FileWriter writer = new FileWriter(file_ID,true);\r\n            BufferedWriter out = new BufferedWriter(writer);\r\n            out.write(output);\r\n            out.flush();\r\n            out.newLine();\r\n            out.close();\r\n            writer.close();\r\n            Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n            alert.setTitle(\"Successo\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Paziente registrato a sistema\");\r\n            alert.showAndWait();\r\n        }catch (IOException e){\r\n            e.toString();\r\n        }\r\n    }\r\n\r\n\r\n    public void onCittadiniSelected(){\r\n        cittadini=new Cittadini();\r\n        try {\r\n            cittadini.loadMainCittadiniUI();\r\n            Stage stage=(Stage)btn_cittadini.getScene().getWindow();\r\n            stage.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public void onRegisterClicked() throws Exception{ //TODO FAR ANDARE A CAPO QUANDO SCRIVE\r\n        String pwd = user_password.getText();\r\n        String user = user_txtfield.getText();\r\n\r\n        /*Hashing della password per renderla one-way\r\n        MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controllare che questo controllore sia giusto. sul web dicono che non funzioni correttamente\r\n\r\n        try{\r\n            MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n            byte[] hash = messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8));\r\n            pwd = toHexString(hash);\r\n            System.out.println(pwd);\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        FileWriter writer = new FileWriter(PATH_TO_CITTADINI_REGISTRATI_DATI,true);\r\n        BufferedWriter out = new BufferedWriter(writer);\r\n        String scrivi = user+\";\"+pwd;\r\n        out.write(scrivi);\r\n        out.newLine();\r\n        out.close();\r\n    }\r\n\r\n    private String toHexString(byte[] array) {\r\n        StringBuilder sb = new StringBuilder(array.length * 2);\r\n\r\n        for (byte b : array){\r\n            int value = 0xFF & b;\r\n            String toAppend = Integer.toHexString(value);\r\n\r\n            sb.append(toAppend);\r\n        }\r\n        sb.setLength(sb.length()-1);\r\n        return sb.toString();\r\n    }\r\n\r\n    public void onLoginClicked() {\r\n        String user = user_txtfield.getText();\r\n        String pwd = user_password.getText();\r\n        String user_temp; //questi temp sono i \"candidati\" user e psw presi dal reader dal file\r\n        String pwd_temp;\r\n        String[] parts;//contenitore per il metodo split\r\n\r\n        try {\r\n            if (!user.equals(\"\") && !pwd.equals(\"\")) {\r\n                File file = new File(PATH_TO_CITTADINI_REGISTRATI_DATI);\r\n                Scanner reader = new Scanner(file);\r\n                while (reader.hasNextLine()) {\r\n                    String line = reader.nextLine();\r\n                    parts = line.split(\";\");\r\n                    user_temp = parts[0];\r\n                    pwd_temp = parts[1];\r\n\r\n                    MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n                    pwd_temp = new String(messageDigest.digest(pwd_temp.getBytes(StandardCharsets.UTF_8))); //TODO Rivedere controllore\r\n\r\n                    if (user_temp.equals(user) && pwd_temp.equals(pwd)) {\r\n                        System.out.println(\"LOGGATO\");  //in qualche modo qui caricherà la nuova interface, vai pole divertiti\r\n                    } else {\r\n                        System.out.println(\"User inesistente, premere sul tasto 'register'\");//popup magari (?)\r\n                        /*\r\n                        JOptionPane.showMessageDialog(null,\r\n                            \"User inesistente, premere sul tasto 'register'\",\r\n                            JOptionPane.ERROR_MESSAGE);                           popup?\r\n                        */\r\n                    }\r\n                }\r\n            } else {\r\n                System.out.println(\"Inserire dei dati\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void onNewVaccinate(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoPaziente.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo Paziente\");\r\n\r\n\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n            stage.getIcons().add(image);\r\n            stage.show();\r\n\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void vaccino_somministrato_setter(){\r\n        vaccino_somministrato.setItems(vaccino_somministrato_items);\r\n    }\r\n\r\n    public void qualificatore_setter(){\r\n        qualificatore.setItems(qualificatore_items);\r\n    }\r\n\r\n    public void centro_vaccinale_setter(){\r\n        String[] parts;\r\n        String nome_centro_vaccinale=\"\";\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n            Scanner reader = new Scanner(file);\r\n            while (reader.hasNextLine()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                nome_centro_vaccinale = parts[0];\r\n                if(!centro_vaccinale_items.contains(nome_centro_vaccinale))\r\n                    centro_vaccinale_items.add(nome_centro_vaccinale);\r\n            }\r\n            centro_vaccinale.setItems(centro_vaccinale_items);\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void annulla_button(){\r\n        Stage stage = (Stage)annulla.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n\r\n\r\n    public void onNewVaccinateClicked(){\r\n        onNewVaccinate();\r\n    }\r\n\r\n\r\n\r\n    public static void main(String[] args) throws Exception {\r\n         Application.launch();\r\n\r\n    }\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/centrivaccinali/CentriVaccinali.java b/src/centrivaccinali/CentriVaccinali.java
+--- a/src/centrivaccinali/CentriVaccinali.java	(revision 0fbdb4e7ef30bc14120f63b04e961371a044c279)
++++ b/src/centrivaccinali/CentriVaccinali.java	(date 1629125290861)
+@@ -205,6 +205,7 @@
+             e.printStackTrace();
+         }
+     }
++
+     public void onNuovoCentroSelected(){
+         try {
+             FXMLLoader loader = new FXMLLoader();
+@@ -230,7 +231,6 @@
+             e.printStackTrace();
+         }
+ 
+-
+     }
+ 
+     public void registraVaccinato(){
Index: src/centrivaccinali/nuovoPaziente.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.paint.*?>\r\n<?import javafx.scene.shape.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane prefHeight=\"700.0\" prefWidth=\"550.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"centrivaccinali.CentriVaccinaliUI\">\r\n   <children>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" height=\"700.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"550.0\">\r\n         <fill>\r\n            <RadialGradient centerX=\"0.5\" centerY=\"0.5\" cycleMethod=\"REFLECT\" radius=\"0.5\">\r\n               <stops>\r\n                  <Stop>\r\n                     <color>\r\n                        <Color />\r\n                     </color>\r\n                  </Stop>\r\n                  <Stop offset=\"1.0\">\r\n                     <color>\r\n                        <Color red=\"0.09803921729326248\" green=\"0.4901960790157318\" blue=\"0.7882353067398071\" />\r\n                     </color>\r\n                  </Stop>\r\n               </stops>\r\n            </RadialGradient>\r\n         </fill></Rectangle>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"#91ceff\" height=\"660.0\" layoutX=\"15.0\" layoutY=\"20.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"520.0\" />\r\n      <ChoiceBox fx:id=\"vaccino_somministrato\" layoutX=\"50.0\" layoutY=\"425.0\" onMousePressed=\"#vaccino_somministrato_setter\" prefWidth=\"180.0\" />\r\n      <TextField fx:id=\"nome_paziente\" layoutX=\"50.0\" layoutY=\"195.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <TextField fx:id=\"cognome_paziente\" layoutX=\"324.0\" layoutY=\"195.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <TextField fx:id=\"cf_paziente\" layoutX=\"50.0\" layoutY=\"310.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <TextField fx:id=\"ID_vaccinazione\" layoutX=\"324.0\" layoutY=\"310.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <Label layoutX=\"81.0\" layoutY=\"150.0\" prefHeight=\"22.0\" prefWidth=\"119.0\" text=\"Nome Paziente\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"338.0\" layoutY=\"150.0\" prefHeight=\"22.0\" prefWidth=\"152.0\" text=\"Cognome Paziente\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"350.0\" layoutY=\"265.0\" prefHeight=\"22.0\" prefWidth=\"128.0\" text=\"ID Vaccinazione\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"81.0\" layoutY=\"265.0\" prefHeight=\"22.0\" prefWidth=\"119.0\" text=\"Codice Fiscale\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"50.0\" layoutY=\"380.0\" prefHeight=\"22.0\" prefWidth=\"180.0\" text=\"Vaccino Somministrato\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"341.0\" layoutY=\"380.0\" prefHeight=\"22.0\" prefWidth=\"146.0\" text=\"Data Vaccinazione\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <ChoiceBox fx:id=\"centro_vaccinale\" layoutX=\"50.0\" layoutY=\"540.0\" onMousePressed=\"#centro_vaccinale_setter\" prefHeight=\"25.0\" prefWidth=\"282.0\" />\r\n      <Label layoutX=\"124.0\" layoutY=\"495.0\" prefHeight=\"22.0\" prefWidth=\"152.0\" text=\"Centro Vaccinale\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Button fx:id=\"nuovoPaziente_confirm\" layoutX=\"395.0\" layoutY=\"605.0\" mnemonicParsing=\"false\" onAction=\"#registraVaccinato\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"Conferma\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font></Button>\r\n      <Button layoutX=\"270.0\" layoutY=\"605.0\" mnemonicParsing=\"false\" prefHeight=\"42.0\" prefWidth=\"109.0\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"Annulla\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <DatePicker fx:id=\"data_vaccinazione\" layoutX=\"317.0\" layoutY=\"425.0\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/centrivaccinali/nuovoPaziente.fxml b/src/centrivaccinali/nuovoPaziente.fxml
--- a/src/centrivaccinali/nuovoPaziente.fxml	
+++ b/src/centrivaccinali/nuovoPaziente.fxml	
@@ -6,7 +6,7 @@
 <?import javafx.scene.shape.*?>
 <?import javafx.scene.text.*?>
 
-<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.CentriVaccinaliUI">
+<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.CentriVaccinali">
    <children>
       <Rectangle arcHeight="5.0" arcWidth="5.0" height="700.0" stroke="BLACK" strokeType="INSIDE" width="550.0">
          <fill>
@@ -71,7 +71,7 @@
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font></Button>
-      <Button layoutX="270.0" layoutY="605.0" mnemonicParsing="false" prefHeight="42.0" prefWidth="109.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="Annulla">
+      <Button fx:id="annulla" layoutX="270.0" layoutY="605.0" mnemonicParsing="false" onAction="#annulla_button" prefHeight="42.0" prefWidth="109.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="Annulla">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
Index: src/centrivaccinali/opzioniLoggato.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.paint.*?>\r\n<?import javafx.scene.shape.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane prefHeight=\"700.0\" prefWidth=\"550.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"centrivaccinali.OpzioniLoggato\">\r\n   <children>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" height=\"700.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"550.0\">\r\n         <fill>\r\n            <RadialGradient centerX=\"0.5\" centerY=\"0.5\" cycleMethod=\"REFLECT\" radius=\"0.74\">\r\n               <stops>\r\n                  <Stop>\r\n                     <color>\r\n                        <Color />\r\n                     </color>\r\n                  </Stop>\r\n                  <Stop offset=\"1.0\">\r\n                     <color>\r\n                        <Color red=\"0.09803921729326248\" green=\"0.4901960790157318\" blue=\"0.7882353067398071\" />\r\n                     </color>\r\n                  </Stop>\r\n               </stops>\r\n            </RadialGradient>\r\n         </fill></Rectangle>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"#91ceff\" height=\"660.0\" layoutX=\"15.0\" layoutY=\"20.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"520.0\" />\r\n      <Button layoutX=\"70.0\" layoutY=\"450.0\" mnemonicParsing=\"false\" prefHeight=\"50.0\" prefWidth=\"150.0\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"N. Vaccinato\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font></Button>\r\n      <Button layoutX=\"330.0\" layoutY=\"450.0\" mnemonicParsing=\"false\" prefHeight=\"50.0\" prefWidth=\"150.0\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"N. Centro\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <ImageView fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"314.0\" layoutY=\"212.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n         <image>\r\n            <Image url=\"@ospedale.png\" />\r\n         </image>\r\n      </ImageView>\r\n      <ImageView fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"70.0\" layoutY=\"212.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n         <image>\r\n            <Image url=\"@siringa.png\" />\r\n         </image></ImageView>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/centrivaccinali/opzioniLoggato.fxml b/src/centrivaccinali/opzioniLoggato.fxml
--- a/src/centrivaccinali/opzioniLoggato.fxml	
+++ b/src/centrivaccinali/opzioniLoggato.fxml	
@@ -7,7 +7,7 @@
 <?import javafx.scene.shape.*?>
 <?import javafx.scene.text.*?>
 
-<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.OpzioniLoggato">
+<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.CentriVaccinali">
    <children>
       <Rectangle arcHeight="5.0" arcWidth="5.0" height="700.0" stroke="BLACK" strokeType="INSIDE" width="550.0">
          <fill>
@@ -27,11 +27,11 @@
             </RadialGradient>
          </fill></Rectangle>
       <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#91ceff" height="660.0" layoutX="15.0" layoutY="20.0" stroke="BLACK" strokeType="INSIDE" width="520.0" />
-      <Button layoutX="70.0" layoutY="450.0" mnemonicParsing="false" prefHeight="50.0" prefWidth="150.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="N. Vaccinato">
+      <Button fx:id="nuovo_vaccinato" layoutX="70.0" layoutY="450.0" mnemonicParsing="false" onAction="#onNewVaccinateClicked" prefHeight="50.0" prefWidth="150.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="N. Vaccinato">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font></Button>
-      <Button layoutX="330.0" layoutY="450.0" mnemonicParsing="false" prefHeight="50.0" prefWidth="150.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="N. Centro">
+      <Button fx:id="nuovo_centro_ui" layoutX="330.0" layoutY="450.0" mnemonicParsing="false" onAction="#onNuovoCentroSelected" prefHeight="50.0" prefWidth="150.0" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="N. Centro">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
Index: bin/production/ProgettoLaboratorio/centrivaccinali/nuovoCentroVaccinale.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bin/production/ProgettoLaboratorio/centrivaccinali/nuovoCentroVaccinale.fxml b/bin/production/ProgettoLaboratorio/centrivaccinali/nuovoCentroVaccinale.fxml
new file mode 100644
--- /dev/null	
+++ b/bin/production/ProgettoLaboratorio/centrivaccinali/nuovoCentroVaccinale.fxml	
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+
+<AnchorPane prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.CentriVaccinali">
+   <children>
+      <Label layoutX="27.0" layoutY="34.0" text="Nome " />
+      <TextField fx:id="nome_centro" layoutX="27.0" layoutY="66.0" />
+      <Button fx:id="registra_centro_vaccinale" layoutX="509.0" layoutY="346.0" mnemonicParsing="false" onAction="#registraCentroVaccinale" text="Registra" />
+      <ChoiceBox fx:id="qualificatore" layoutX="275.0" layoutY="66.0" onMousePressed="#qualificatore_setter" prefHeight="25.0" prefWidth="42.0" />
+      <TextField fx:id="nome_via" layoutX="335.0" layoutY="66.0" prefHeight="25.0" prefWidth="59.0" />
+      <TextField fx:id="numero_civico" layoutX="405.0" layoutY="66.0" prefHeight="25.0" prefWidth="59.0" />
+      <TextField fx:id="comune" layoutX="335.0" layoutY="129.0" prefHeight="25.0" prefWidth="59.0" />
+      <TextField fx:id="provincia" layoutX="405.0" layoutY="129.0" prefHeight="25.0" prefWidth="59.0" />
+      <TextField fx:id="cap" layoutX="335.0" layoutY="188.0" prefHeight="25.0" prefWidth="59.0" />
+      <Label layoutX="249.0" layoutY="43.0" text="Qualificatore" />
+      <Label layoutX="351.0" layoutY="43.0" text="Nome" />
+      <Label layoutX="413.0" layoutY="43.0" text="Numero civico" />
+      <Label layoutX="342.0" layoutY="105.0" text="Comune" />
+      <Label layoutX="413.0" layoutY="105.0" text="Provincia (sigla)" />
+      <Label layoutX="351.0" layoutY="165.0" text="CAP" />
+      <Button fx:id="annulla" layoutX="435.0" layoutY="346.0" mnemonicParsing="false" onAction="#annulla_button" text="Annulla" />
+   </children>
+</AnchorPane>
Index: bin/production/ProgettoLaboratorio/cittadini/registraEventiAvversi.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.paint.*?>\r\n<?import javafx.scene.shape.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane prefHeight=\"700.0\" prefWidth=\"550.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"centrivaccinali.NuovoCittadino\">\r\n   <children>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" height=\"700.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"550.0\">\r\n         <fill>\r\n            <RadialGradient centerX=\"0.5\" centerY=\"0.5\" cycleMethod=\"REFLECT\" radius=\"0.5\">\r\n               <stops>\r\n                  <Stop>\r\n                     <color>\r\n                        <Color />\r\n                     </color>\r\n                  </Stop>\r\n                  <Stop offset=\"1.0\">\r\n                     <color>\r\n                        <Color red=\"0.09803921729326248\" green=\"0.4901960790157318\" blue=\"0.7882353067398071\" />\r\n                     </color>\r\n                  </Stop>\r\n               </stops>\r\n            </RadialGradient>\r\n         </fill></Rectangle>\r\n      <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"#91ceff\" height=\"660.0\" layoutX=\"15.0\" layoutY=\"20.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"520.0\" />\r\n      <TextField layoutX=\"95.0\" layoutY=\"500.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <Spinner id=\"box1\" editable=\"true\" layoutX=\"365.0\" layoutY=\"150.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Spinner id=\"box2\" layoutX=\"365.0\" layoutY=\"200.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Spinner id=\"box3\" layoutX=\"365.0\" layoutY=\"250.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Label layoutX=\"95.0\" layoutY=\"150.0\" prefHeight=\"22.0\" prefWidth=\"109.0\" text=\"Mal di testa:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"95.0\" layoutY=\"200.0\" prefHeight=\"22.0\" prefWidth=\"70.0\" text=\"Febbre:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"95.0\" layoutY=\"250.0\" prefHeight=\"22.0\" prefWidth=\"228.0\" text=\"Dolori muscolari o articolari:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"83.0\" layoutY=\"68.0\" prefHeight=\"67.0\" prefWidth=\"384.0\" text=\"Per ogni sintomo se riscontrato inserire un valore da 1 a 5 che rappresenti l'intensità del sintomo:\" wrapText=\"true\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"95.0\" layoutY=\"300.0\" prefHeight=\"22.0\" prefWidth=\"145.0\" text=\"Linfoadenopatia:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Button layoutX=\"395.0\" layoutY=\"605.0\" mnemonicParsing=\"false\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"Conferma\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font></Button>\r\n      <Button layoutX=\"270.0\" layoutY=\"605.0\" mnemonicParsing=\"false\" prefHeight=\"42.0\" prefWidth=\"109.0\" style=\"-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;\" text=\"Annulla\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Button>\r\n      <Spinner id=\"box4\" layoutX=\"365.0\" layoutY=\"300.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Label layoutX=\"95.0\" layoutY=\"350.0\" prefHeight=\"22.0\" prefWidth=\"109.0\" text=\"Tachicardia:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Spinner id=\"box5\" layoutX=\"365.0\" layoutY=\"350.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Label layoutX=\"95.0\" layoutY=\"400.0\" prefHeight=\"22.0\" prefWidth=\"145.0\" text=\"Crisi ipertensiva:\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Spinner id=\"box6\" layoutX=\"365.0\" layoutY=\"400.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Spinner layoutX=\"365.0\" layoutY=\"550.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <TextField layoutX=\"95.0\" layoutY=\"550.0\" prefHeight=\"25.0\" prefWidth=\"180.0\" />\r\n      <Spinner layoutX=\"365.0\" layoutY=\"500.0\" prefHeight=\"25.0\" prefWidth=\"55.0\" />\r\n      <Label layoutX=\"95.0\" layoutY=\"450.0\" prefHeight=\"22.0\" prefWidth=\"298.0\" text=\"Altri sintomi (massimo 256 caratteri):\">\r\n         <font>\r\n            <Font name=\"Franklin Gothic Medium\" size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bin/production/ProgettoLaboratorio/cittadini/registraEventiAvversi.fxml b/bin/production/ProgettoLaboratorio/cittadini/registraEventiAvversi.fxml
--- a/bin/production/ProgettoLaboratorio/cittadini/registraEventiAvversi.fxml	
+++ b/bin/production/ProgettoLaboratorio/cittadini/registraEventiAvversi.fxml	
@@ -6,7 +6,7 @@
 <?import javafx.scene.shape.*?>
 <?import javafx.scene.text.*?>
 
-<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="centrivaccinali.NuovoCittadino">
+<AnchorPane prefHeight="700.0" prefWidth="550.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1" fx:controller="cittadini.Cittadini">
    <children>
       <Rectangle arcHeight="5.0" arcWidth="5.0" height="700.0" stroke="BLACK" strokeType="INSIDE" width="550.0">
          <fill>
@@ -26,10 +26,10 @@
             </RadialGradient>
          </fill></Rectangle>
       <Rectangle arcHeight="5.0" arcWidth="5.0" fill="#91ceff" height="660.0" layoutX="15.0" layoutY="20.0" stroke="BLACK" strokeType="INSIDE" width="520.0" />
-      <TextField layoutX="95.0" layoutY="500.0" prefHeight="25.0" prefWidth="180.0" />
-      <Spinner id="box1" editable="true" layoutX="365.0" layoutY="150.0" prefHeight="25.0" prefWidth="55.0" />
-      <Spinner id="box2" layoutX="365.0" layoutY="200.0" prefHeight="25.0" prefWidth="55.0" />
-      <Spinner id="box3" layoutX="365.0" layoutY="250.0" prefHeight="25.0" prefWidth="55.0" />
+      <TextField fx:id="txt_other1" layoutX="95.0" layoutY="500.0" prefHeight="25.0" prefWidth="180.0" />
+      <Spinner id="box1" fx:id="spn_headache" editable="true" layoutX="365.0" layoutY="150.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box2" fx:id="spn_fever" layoutX="365.0" layoutY="200.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box3" fx:id="spn_hurt" layoutX="365.0" layoutY="250.0" prefHeight="25.0" prefWidth="55.0" />
       <Label layoutX="95.0" layoutY="150.0" prefHeight="22.0" prefWidth="109.0" text="Mal di testa:">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
@@ -55,7 +55,7 @@
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
       </Label>
-      <Button layoutX="395.0" layoutY="605.0" mnemonicParsing="false" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="Conferma">
+      <Button layoutX="395.0" layoutY="605.0" mnemonicParsing="false" onAction="#registerEventiAvversi" style="-fx-background-color: #FFFFFF; -fx-background-radius: 0; -fx-border-color: #197dc9; -fx-border-width: 4;" text="Conferma">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font></Button>
@@ -64,22 +64,22 @@
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
       </Button>
-      <Spinner id="box4" layoutX="365.0" layoutY="300.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box4" fx:id="spn_linf" layoutX="365.0" layoutY="300.0" prefHeight="25.0" prefWidth="55.0" />
       <Label layoutX="95.0" layoutY="350.0" prefHeight="22.0" prefWidth="109.0" text="Tachicardia:">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
       </Label>
-      <Spinner id="box5" layoutX="365.0" layoutY="350.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box5" fx:id="spn_tac" layoutX="365.0" layoutY="350.0" prefHeight="25.0" prefWidth="55.0" />
       <Label layoutX="95.0" layoutY="400.0" prefHeight="22.0" prefWidth="145.0" text="Crisi ipertensiva:">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
          </font>
       </Label>
-      <Spinner id="box6" layoutX="365.0" layoutY="400.0" prefHeight="25.0" prefWidth="55.0" />
-      <Spinner layoutX="365.0" layoutY="550.0" prefHeight="25.0" prefWidth="55.0" />
-      <TextField layoutX="95.0" layoutY="550.0" prefHeight="25.0" prefWidth="180.0" />
-      <Spinner layoutX="365.0" layoutY="500.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner id="box6" fx:id="spn_crs" layoutX="365.0" layoutY="400.0" prefHeight="25.0" prefWidth="55.0" />
+      <Spinner fx:id="spn_other2" layoutX="365.0" layoutY="550.0" prefHeight="25.0" prefWidth="55.0" />
+      <TextField fx:id="txt_other2" layoutX="95.0" layoutY="550.0" prefHeight="25.0" prefWidth="180.0" />
+      <Spinner fx:id="spn_other1" layoutX="365.0" layoutY="500.0" prefHeight="25.0" prefWidth="55.0" />
       <Label layoutX="95.0" layoutY="450.0" prefHeight="22.0" prefWidth="298.0" text="Altri sintomi (massimo 256 caratteri):">
          <font>
             <Font name="Franklin Gothic Medium" size="18.0" />
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_08_2021_17_01_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_08_2021_17_01_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_16_08_2021_17_01_[Default_Changelist]/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_16_08_2021_17_01_[Default_Changelist]/shelved.patch	
@@ -0,0 +1,31 @@
+Index: src/centrivaccinali/CentriVaccinali.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package centrivaccinali;\r\n\r\nimport cittadini.Cittadini;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport javafx.application.Application;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.MessageDigest;\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.util.Scanner;\r\n\r\n//TODO METTERE NOME COGNOME MATRICOLA SEDE\r\npublic class CentriVaccinali extends Application {\r\n    public static final String PATH_TO_CENTRIVACCINALI=\"data/CentriVaccinali.dati.txt\";\r\n    public static final String PATH_TO_CITTADINI_REGISTRATI_DATI=\"data/Cittadini_Registrati.dati.txt\";\r\n    public static final String PATH_TO_DATA=\"data/\";\r\n    public static final String PREFIX = \"Vaccinati_\";\r\n    public static final String SUFFIX = \".dati.txt\";\r\n    private ObservableList<String> vaccino_somministrato_items = FXCollections.observableArrayList(\"Pfizer\",\"AstraZeneca\",\"Moderna\",\"J&J\");\r\n    private ObservableList<String> centro_vaccinale_items = FXCollections.observableArrayList();\r\n    private ObservableList<String> qualificatore_items = FXCollections.observableArrayList(\"via\",\"v.le\",\"pzza\");\r\n    public static final String PATH_TO_CENTRIVACCINALI_DATI = \"data/CentriVaccinali.dati.txt\";\r\n    private Scene scene;\r\n    Cittadini cittadini;\r\n    @FXML\r\n    private TextField user_txtfield;\r\n    @FXML\r\n    private PasswordField user_password;\r\n    @FXML\r\n    private Button btn_cittadini;\r\n    @FXML\r\n    private Button btn_centriVaccinali;\r\n    @FXML\r\n    private javafx.scene.control.TextField nome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cognome_paziente;\r\n    @FXML\r\n    private javafx.scene.control.TextField cf_paziente;\r\n    @FXML\r\n    private TextField ID_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> vaccino_somministrato;\r\n    @FXML\r\n    private DatePicker data_vaccinazione;\r\n    @FXML\r\n    private ChoiceBox<String> centro_vaccinale;\r\n    @FXML\r\n    private TextField nome_centro;\r\n    @FXML\r\n    private TextField nome_via;\r\n    @FXML\r\n    private TextField numero_civico;\r\n    @FXML\r\n    private TextField comune;\r\n    @FXML\r\n    private TextField provincia;\r\n    @FXML\r\n    private TextField cap;\r\n    @FXML\r\n    private ChoiceBox<String> qualificatore;\r\n    @FXML\r\n    private Button annulla;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        FXMLLoader loader = new FXMLLoader();\r\n        URL xmlUrl = getClass().getResource(\"SelectionUI.fxml\");\r\n        loader.setLocation(xmlUrl);\r\n\r\n        Parent root = loader.load();\r\n\r\n        Scene scene=new Scene(root);\r\n\r\n\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Pagina iniziale\");\r\n\r\n        InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n        Image image = new Image(icon);\r\n\r\n        stage.getIcons().add(image);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    /*public static void registraCentroVaccinale(SingoloCentroVaccinale centroVaccinale){ //metodo per registrare i centri\r\n        String nome = centroVaccinale.getNome();\r\n        String indirizzo = centroVaccinale.getIndirizzo();\r\n        String tipologia = centroVaccinale.getTipologia();\r\n        try{\r\n            File file = new File(PATH_TO_DATA+PREFIX+nome+SUFFIX);\r\n            FileWriter fw = new FileWriter(file);\r\n            FileWriter writer = new FileWriter(\"account.txt\", true);\r\n            BufferedWriter out = new BufferedWriter(writer);\r\n            String fileInput = nome + \";\" + tipologia + \";\" + indirizzo;\r\n            out.write(fileInput);\r\n            out.newLine();\r\n            out.flush();\r\n            out.close();\r\n        }catch(IOException e){\r\n            System.out.println(\"\\\"File inesistente o non trovato\\\"\");\r\n        }\r\n    }\r\n*/ //TODO RIVEDERE QUI SOPRA\r\n\r\n    public void registraCentroVaccinale(){\r\n        String nome = nome_centro.getText();\r\n        String qualif = qualificatore.getValue();\r\n        String via = nome_via.getText();\r\n        String civico = numero_civico.getText();\r\n        String com = comune.getText();\r\n        String prov = provincia.getText();\r\n        String Cap = cap.getText();\r\n        if(nome.equals(\"\") || qualif==null || via.equals(\"\")|| civico.equals(\"\")|| com.equals(\"\")|| prov.equals(\"\")|| Cap.equals(\"\")){\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"Errore\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Controllare i dati inseriti\");\r\n            alert.showAndWait();\r\n        }else{\r\n            try{\r\n                File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n                BufferedWriter out = new BufferedWriter(new FileWriter(file,true));\r\n                String output = nome+\";\"+qualif+\";\"+via+\";\"+civico+\";\"+com+\";\"+prov+\";\"+Cap;\r\n                out.write(output);\r\n                out.newLine();\r\n                out.flush();\r\n                out.close();\r\n                Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n                alert.setTitle(\"Successo\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Centro vaccinale registrato\");\r\n                alert.showAndWait();\r\n            }catch (IOException e){\r\n                e.toString();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void stop() throws Exception {\r\n        super.stop();\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String nomeCentroVaccinale)throws FileNotFoundException{ //Ricerca centro per nome, ogni centro che contiene quella \"parte\" di nome, viene visualizzato\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI);\r\n            Scanner reader = new Scanner(file);\r\n            String[] parts;\r\n            while(reader.hasNext()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                if(parts[0].contains(nomeCentroVaccinale)){\r\n                    System.out.println(\"Centri trovati:\"+parts[0]);\r\n                }else{\r\n                    System.out.println(\"Il centro potrebbe non esistere\");\r\n                }\r\n            }\r\n            reader.close();\r\n\r\n        /*parts = line.split(\";\");\r\n        if(parts[0].contains(nomeCentroVaccinale)){\r\n            System.out.println(\"Centro trovato\");\r\n        }else{\r\n            System.out.println(\"Il centro potrebbe non esistere\");\r\n        }\r\n        reader.close();\r\n\r\n         */\r\n        }catch (FileNotFoundException fe) {\r\n            fe.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void cercaCentroVaccinale(String comune, String tipologia) throws FileNotFoundException{  //TODO rivedere i tipi dei parametri e try catch\r\n\r\n    }\r\n\r\n    public void visualizzaInfoCentroVaccinale(SingoloCentroVaccinale centroVaccinale){\r\n        System.out.println(centroVaccinale.toString());\r\n\r\n    }\r\n\r\n    public void inserisciEventiAvversi(Object eventoAvverso){  //TODO modificare i parametri\r\n\r\n    }\r\n\r\n    public void onCentriVaccinaliSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"opzioniLoggato.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"opzioniLoggato\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void onNuovoCentroSelected(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoCentroVaccinale.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo centro vaccinale\");\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n\r\n            stage.getIcons().add(image);\r\n\r\n            stage.show();\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void registraVaccinato(){\r\n        //TODO chiamare questo metodo dopo registrazione (pole deve fare la sua parte)\r\n        String nome = nome_paziente.getText();\r\n        String cognome = cognome_paziente.getText();\r\n        String codice_fiscale =cf_paziente.getText();\r\n        String tipoVaccino = vaccino_somministrato.getValue();\r\n        String centroVaccinale = centro_vaccinale.getValue();\r\n        String id_vaccino = ID_vaccinazione.getText();\r\n        LocalDate dataVaccino = data_vaccinazione.getValue();\r\n        String dataVaccinazione = dataVaccino.format(DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\"));\r\n\r\n\r\n        SingoloCittadino cittadino = new SingoloCittadino(nome,cognome,codice_fiscale);\r\n        cittadino.setCentroVaccinale(centroVaccinale);\r\n        cittadino.setIdVaccino(Integer.parseInt(id_vaccino));\r\n\r\n        int idVaccino = cittadino.getIdVaccino();\r\n\r\n        String output = nome+\";\"+cognome+\";\"+codice_fiscale+\";\"+tipoVaccino+\";\"+idVaccino+\";\"+dataVaccinazione;\r\n        String file_ID = \"data/\"+\"Vaccinati_\"+centroVaccinale+\".dati.txt\";\r\n        try{\r\n            FileWriter writer = new FileWriter(file_ID,true);\r\n            BufferedWriter out = new BufferedWriter(writer);\r\n            out.write(output);\r\n            out.flush();\r\n            out.newLine();\r\n            out.close();\r\n            writer.close();\r\n            Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n            alert.setTitle(\"Successo\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Paziente registrato a sistema\");\r\n            alert.showAndWait();\r\n        }catch (IOException e){\r\n            e.toString();\r\n        }\r\n    }\r\n\r\n\r\n    public void onCittadiniSelected(){\r\n        cittadini=new Cittadini();\r\n        try {\r\n            cittadini.loadMainCittadiniUI();\r\n            Stage stage=(Stage)btn_cittadini.getScene().getWindow();\r\n            stage.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public void onRegisterClicked() throws Exception{ //TODO FAR ANDARE A CAPO QUANDO SCRIVE\r\n        String pwd = user_password.getText();\r\n        String user = user_txtfield.getText();\r\n\r\n        /*Hashing della password per renderla one-way\r\n        MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n        pwd=new String(messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8)));*/ //TODO controllare che questo controllore sia giusto. sul web dicono che non funzioni correttamente\r\n\r\n        try{\r\n            MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-256\");\r\n            byte[] hash = messageDigest.digest(pwd.getBytes(StandardCharsets.UTF_8));\r\n            pwd = toHexString(hash);\r\n            System.out.println(pwd);\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        FileWriter writer = new FileWriter(PATH_TO_CITTADINI_REGISTRATI_DATI,true);\r\n        BufferedWriter out = new BufferedWriter(writer);\r\n        String scrivi = user+\";\"+pwd;\r\n        out.write(scrivi);\r\n        out.newLine();\r\n        out.close();\r\n    }\r\n\r\n    private String toHexString(byte[] array) {\r\n        StringBuilder sb = new StringBuilder(array.length * 2);\r\n\r\n        for (byte b : array){\r\n            int value = 0xFF & b;\r\n            String toAppend = Integer.toHexString(value);\r\n\r\n            sb.append(toAppend);\r\n        }\r\n        sb.setLength(sb.length()-1);\r\n        return sb.toString();\r\n    }\r\n\r\n    public void onLoginClicked() {\r\n        String user = user_txtfield.getText();\r\n        String pwd = user_password.getText();\r\n        String user_temp; //questi temp sono i \"candidati\" user e psw presi dal reader dal file\r\n        String pwd_temp;\r\n        String[] parts;//contenitore per il metodo split\r\n\r\n        try {\r\n            if (!user.equals(\"\") && !pwd.equals(\"\")) {\r\n                File file = new File(PATH_TO_CITTADINI_REGISTRATI_DATI);\r\n                Scanner reader = new Scanner(file);\r\n                while (reader.hasNextLine()) {\r\n                    String line = reader.nextLine();\r\n                    parts = line.split(\";\");\r\n                    user_temp = parts[0];\r\n                    pwd_temp = parts[1];\r\n\r\n                    MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n                    pwd_temp = new String(messageDigest.digest(pwd_temp.getBytes(StandardCharsets.UTF_8))); //TODO Rivedere controllore\r\n\r\n                    if (user_temp.equals(user) && pwd_temp.equals(pwd)) {\r\n                        System.out.println(\"LOGGATO\");  //in qualche modo qui caricherà la nuova interface, vai pole divertiti\r\n                    } else {\r\n                        System.out.println(\"User inesistente, premere sul tasto 'register'\");//popup magari (?)\r\n                        /*\r\n                        JOptionPane.showMessageDialog(null,\r\n                            \"User inesistente, premere sul tasto 'register'\",\r\n                            JOptionPane.ERROR_MESSAGE);                           popup?\r\n                        */\r\n                    }\r\n                }\r\n            } else {\r\n                System.out.println(\"Inserire dei dati\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void onNewVaccinate(){\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            URL xmlUrl = getClass().getResource(\"nuovoPaziente.fxml\");\r\n            loader.setLocation(xmlUrl);\r\n\r\n            Parent root = loader.load();\r\n\r\n\r\n\r\n            scene = new Scene(root);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Nuovo Paziente\");\r\n\r\n\r\n\r\n            InputStream icon = getClass().getResourceAsStream(\"fiorellino.png\");\r\n            Image image = new Image(icon);\r\n            stage.getIcons().add(image);\r\n            stage.show();\r\n\r\n        }\r\n        catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void vaccino_somministrato_setter(){\r\n        vaccino_somministrato.setItems(vaccino_somministrato_items);\r\n    }\r\n\r\n    public void qualificatore_setter(){\r\n        qualificatore.setItems(qualificatore_items);\r\n    }\r\n\r\n    public void centro_vaccinale_setter(){\r\n        String[] parts;\r\n        String nome_centro_vaccinale=\"\";\r\n        try{\r\n            File file = new File(PATH_TO_CENTRIVACCINALI_DATI);\r\n            Scanner reader = new Scanner(file);\r\n            while (reader.hasNextLine()){\r\n                String line = reader.nextLine();\r\n                parts = line.split(\";\");\r\n                nome_centro_vaccinale = parts[0];\r\n                if(!centro_vaccinale_items.contains(nome_centro_vaccinale))\r\n                    centro_vaccinale_items.add(nome_centro_vaccinale);\r\n            }\r\n            centro_vaccinale.setItems(centro_vaccinale_items);\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void annulla_button(){\r\n        Stage stage = (Stage)annulla.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n\r\n\r\n    public void onNewVaccinateClicked(){\r\n        onNewVaccinate();\r\n    }\r\n\r\n\r\n\r\n    public static void main(String[] args) throws Exception {\r\n         Application.launch();\r\n\r\n    }\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/centrivaccinali/CentriVaccinali.java b/src/centrivaccinali/CentriVaccinali.java
+--- a/src/centrivaccinali/CentriVaccinali.java	(revision dc1f08b1492a42e94bbd2cada92b6ce8e5f90a87)
++++ b/src/centrivaccinali/CentriVaccinali.java	(date 1629125964928)
+@@ -147,6 +147,7 @@
+         }
+     }
+ 
++
+     @Override
+     public void stop() throws Exception {
+         super.stop();
+Index: data/CentriVaccinali.dati.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>Nome1;test;test\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/data/CentriVaccinali.dati.txt b/data/CentriVaccinali.dati.txt
+--- a/data/CentriVaccinali.dati.txt	(revision dc1f08b1492a42e94bbd2cada92b6ce8e5f90a87)
++++ b/data/CentriVaccinali.dati.txt	(date 1629125972144)
+@@ -1,1 +1,1 @@
+-Nome1;test;test
++Nome1;prova;prova
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_37_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_37_[Default_Changelist]/shelved.patch
new file mode 100644
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_37_[Default_Changelist]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_08_2021_16_37_[Default_Changelist]1/shelved.patch
new file mode 100644
